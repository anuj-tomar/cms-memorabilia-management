{"version":3,"sources":["components/event/addnewEvent.js"],"names":["NewEvent","props","_this","Object","_Users_user_Desktop_workspace_quorumweb_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_user_Desktop_workspace_quorumweb_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_user_Desktop_workspace_quorumweb_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","intialiseState","data","arguments","length","undefined","isinit","image","getValue","title","nature","venue","about","eventDate","time","memberOnly","errorMessages","isValid","isSaving","validate","name","value","_this$state","state","error","type","errorMsg","setState","inputChange","e","_e$target","target","checked","_Users_user_Desktop_workspace_quorumweb_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","onSubmit","preventDefault","forEach","keys","payload","assign","token","updatePageData","url","concat","Endpoint","EVENT_MANAGE","id","method","action","page","response","status","toastmessage","message","closeModal","deleteItem","params","onDrop","files","bulkFiles","toggleUploader","isUploader","setBulkPhotos","bulkCollection","console","log","obj","thumbnail","isImageAdded","getIndividualItem","resetPageStore","prevProps","prevState","itemData","isObject","isObjEmpty","stateD","_this2","_this$state2","_this$props","itemLoader","CATEGORY","VENUES","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","Fragment","className","_customFields_uploader__WEBPACK_IMPORTED_MODULE_16__","onComplete","onBack","folder","tempId","uploadType","isSideNav","not_upload","isPopup","config","aspectRatio","_customFields_loader__WEBPACK_IMPORTED_MODULE_10__","_customFields_inputField__WEBPACK_IMPORTED_MODULE_9__","groupClass","dom","placeholder","options","react_dropzone__WEBPACK_IMPORTED_MODULE_8__","style","position","accept","multiple","accepted","rejected","backgroundImage","src","alt","onChange","onClick","Component","connect","_ref","auth","_ref$page","_ref$page$individualI","individualItem","_ref$page$itemLoader","dispatch","ownProps","myParam","cb"],"mappings":"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","file":"static/js/7.6abffc4c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Dropzone from 'react-dropzone';\n\nimport InputField from '../customFields/inputField'\nimport Loader from '../customFields/loader';\nimport { getValue } from '../../utils/formatter';\nimport { validate } from '../../utils/validation';\nimport { isObject, isObjEmpty  } from '../../utils';\nimport { updatePageData, getIndividualItem, resetPageStore } from '../../actions/page';\nimport { Endpoint } from '../../utils/constants';\nimport Uploader from '../customFields/uploader';\n\n\nclass NewEvent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = this.intialiseState();\n    }\n\n    intialiseState = (data = {}, isinit=true) => {\n        return {\n            image: getValue(data, 'image', ''),\n            title: getValue(data, 'title', ''),\n            nature: getValue(data, 'nature', ''),\n            venue: getValue(data, 'venue', ''),\n            about: getValue(data, 'about', ''),\n            eventDate: getValue(data, 'eventDate', null),\n            time: getValue(data, 'time', ''),\n            memberOnly: getValue(data, 'memberOnly', true),\n            errorMessages: {},\n            isValid: {},\n            isinit,\n            isSaving: false\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.id) {\n            this.props.getIndividualItem({\n                params: { token: this.props.token },\n                url: `${Endpoint.EVENT_MANAGE}/${this.props.id}`\n            });\n        }\n    }\n\n    componentWillUnmount() {\n        this.props.resetPageStore('individualItem');\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.itemData != this.props.itemData && prevState.isinit && isObject(this.props.itemData) && !isObjEmpty(this.props.itemData)) {\n            let stateD = this.intialiseState(this.props.itemData, false);\n            this.setState(stateD);\n        }\n    }\n\n    validate = (name, value) => {\n        let { isValid, errorMessages } = this.state;\n        let error = validate(name, value, { type: 'text' });\n        isValid[name] = error.isValid;\n        error.isValid\n            ? delete errorMessages[name]\n            : (errorMessages[name] = error.errorMsg);\n        this.setState({ isValid, errorMessages });\n    };\n\n    inputChange = e => {\n        let {\n            target: { name, value, checked, type }\n        } = e;\n        this.setState({ [name]: type === 'checkbox' ? checked : value }, () => {\n            this.validate(name, value);\n        });\n    };\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        [\"title\", \"nature\", \"venue\", \"about\", \"eventDate\", \"time\"].forEach((name) => {\n            this.validate(name, this.state[name]);\n        });\n        if (Object.keys(this.state.errorMessages).length === 0) {\n            this.setState({ error: '', isSaving: true });\n            let payload = Object.assign({}, this.state);\n            payload.token = this.props.token\n            delete payload.errorMessages;\n            delete payload.isValid;\n            this.props.updatePageData({\n                payload,\n                url: `${Endpoint.EVENT_MANAGE}${this.props.id ? '/' + this.props.id : ''}`,\n                method: this.props.id ? \"PUT\" : 'POST',\n                action: this.props.id ? \"update\" : 'add',\n                page: 'event',\n            }, (response) => {\n                if (response.status) {\n                    this.setState({ error: '', isSaving: false });\n                    this.props.toastmessage(response.message);\n                    this.props.closeModal();\n                } else {\n                    this.setState({ error: response.message, isSaving: false })\n                }\n            });\n        }\n    }\n\n    deleteItem = (e) => {\n        this.props.updatePageData({\n            payload: {},\n            params: { token: this.props.token },\n            url: `${Endpoint.EVENT_MANAGE}/${this.props.id}`,\n            method: 'DELETE',\n            action: 'delete',\n            page: 'event'\n        }, (response) => {\n            if (response.status) {\n                this.setState({ error: '' });\n                this.props.toastmessage(response.message);\n                this.props.closeModal();\n            } else {\n                this.setState({ error: response.message })\n            }\n        });\n    }\n    // onDrop = (a, r) => {\n    //     if (r.length || !a.length) {\n    //         return\n    //     }\n    //     let reader = new FileReader();\n    //     reader.onloadend = () => {\n    //         this.setState({ image: reader.result, isImageAdded: true });\n    //     }\n    //     reader.readAsDataURL(a[0]);\n    // }\n\n    onDrop = (files) => {\n        if (files.length) {\n            this.setState({ bulkFiles: files });\n            this.toggleUploader(true);\n        }\n    }\n\n    toggleUploader = (isUploader) => {\n        this.setState({ isUploader });\n    }\n    setBulkPhotos = (bulkCollection) => {\n        console.log(bulkCollection);\n        if (!bulkCollection || !bulkCollection.length) {\n            return;\n        }\n        var obj = bulkCollection[0];\n        this.setState({ image: obj.thumbnail, isUploader: false, isImageAdded: true });\n    }\n\n    render() {\n        let { bulkFiles, isUploader, image, title, nature, venue, about, eventDate, time, memberOnly, errorMessages, isValid, isSaving } = this.state;\n        let { itemLoader, id, CATEGORY, VENUES } = this.props;\n        return (\n            <React.Fragment>\n                {isUploader && (\n                    <div className='editProfile mt30'>\n                        <Uploader\n                            files={bulkFiles}\n                            onComplete={this.setBulkPhotos}\n                            onBack={this.toggleUploader}\n                            folder={id ? 'user' : 'temp'}\n                            id={id ? id : this.tempId}\n                            uploadType='userImage'\n                            isSideNav={false}\n                            not_upload={true}\n                            isPopup={true}\n                            config={{ aspectRatio: 'p2' }} />\n                    </div>\n                )}\n                {itemLoader && <Loader />}\n                {!itemLoader && !isUploader &&\n                    <div className='eventModal'>\n                        <div className='row'>\n                            <div className='col-7'>\n                                <p className='title-txt'>{id ? 'EDIT EVENT' : 'ADD A NEW EVENT'}</p>\n                                <div className='left-content'>\n                                    <div className='row no-gutters'>\n                                        <div className='col-4'><label className='label-txt'>Title of Event</label></div>\n                                        <div className='col-8'>\n                                            <InputField name=\"title\" groupClass=\"input-style\" value={title} isValid={isValid.title} errorMsg={errorMessages.title}\n                                                inputChange={this.inputChange} dom={{ placeholder: 'Title of Event' }} />\n                                        </div>\n                                    </div>\n                                    <div className='row no-gutters'>\n                                        <div className='col-4'><label className='label-txt'>Nature of Event</label></div>\n                                        <div className='col-8'>\n                                            <InputField name=\"nature\" groupClass=\"input-style\" value={nature} isValid={isValid.nature} errorMsg={errorMessages.nature}\n                                                inputChange={this.inputChange} options={CATEGORY} dom={{ placeholder: 'Nature of Event', type: 'select' }} />\n                                        </div>\n                                    </div>\n                                    <div className='row no-gutters'>\n                                        <div className='col-4'><label className='label-txt'>Venue</label></div>\n                                        <div className='col-8'>\n                                            <InputField name=\"venue\" groupClass=\"input-style\" value={venue} isValid={isValid.venue} errorMsg={errorMessages.venue}\n                                                inputChange={this.inputChange} options={VENUES} dom={{ placeholder: 'Venue', type: 'select' }} />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className='col-5'>\n                                <div className='right-content'>\n                                    <Dropzone\n                                        style={{ position: 'relative' }}\n                                        accept=\"image/jpeg, image/png\"\n                                        multiple={false}\n                                        onDrop={(accepted, rejected) => { this.onDrop(accepted, rejected) }}>\n                                        <div className={'image-style upload-photo ' + (image && 'uploadtxt')} style={{ backgroundImage: `url(${image})` }}>\n                                            <img src={'./images/imagesize16_9.png'} className='w100per' alt='b' />\n                                        </div>\n                                    </Dropzone>\n                                    <div className='row no-gutters'>\n                                        <div className='col-3'><label className='label-txt'>Date</label></div>\n                                        <div className='col-9'>\n                                            <InputField name=\"eventDate\" value={eventDate} isValid={isValid.eventDate} errorMsg={errorMessages.eventDate}\n                                                inputChange={this.inputChange} dom={{ placeholder: 'Date', type: 'date' }} />\n                                        </div>\n                                    </div>\n                                    <div className='row no-gutters'>\n                                        <div className='col-3'><label className='label-txt'>Time</label></div>\n                                        <div className='col-9'>\n                                            <InputField name=\"time\" value={time} groupClass='w100per' isValid={isValid.time} errorMsg={errorMessages.time}\n                                                inputChange={this.inputChange} dom={{ placeholder: 'Time', type: 'time' }} />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className='row no-gutters'>\n                            <div className='col-2'><label className='label-txt'>About the Event</label></div>\n                            <div className='col-10'>\n                                <div className='aboutEvent pl15'><textarea name=\"about\" value={about} onChange={this.inputChange} className='input-style h100px'></textarea></div>\n                            </div>\n                        </div>\n                        <div className='row no-gutters'>\n                            <div className='col-2'><label className='label-txt'>Members only</label></div>\n                            <div className='member-checkbox'>\n                                <input type='checkbox' name='memberOnly' value={memberOnly} checked={memberOnly} onChange={this.inputChange}/>\n                            </div>\n                        </div>\n                        <div className='text-right'>\n                            {id && <div className='btn mr10' onClick={this.deleteItem}>delete</div>}\n                            <div className={`btn ${isSaving ? 'btndisabled' : ''}`} onClick={this.onSubmit}>{id ? 'update' : 'save'}</div>\n                        </div>\n                    </div>\n                }\n            </React.Fragment>\n        );\n    }\n}\nfunction mapStateToProps({ auth: { token }, page: {individualItem: { data = {} }, itemLoader = false } }) {\n    return { token, itemData: data, itemLoader }\n}\nconst mapDispatchToProps = function (dispatch, ownProps) {\n    return {\n        updatePageData: (myParam, cb) => dispatch(updatePageData(myParam, cb)),\n        getIndividualItem: (myParam) => dispatch(getIndividualItem(myParam)),\n        resetPageStore: myParam => dispatch(resetPageStore(myParam))\n    };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(NewEvent);\n"],"sourceRoot":""}