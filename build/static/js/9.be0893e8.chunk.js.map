{"version":3,"sources":["components/globalAccess/globalAccess.js"],"names":["AddGlobal","props","_this","Object","_Users_user_Desktop_workspace_quorumweb_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_Users_user_Desktop_workspace_quorumweb_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_user_Desktop_workspace_quorumweb_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","intialiseState","data","arguments","length","undefined","clubName","getValue","continent","country","city","address","country_name","countryObj","city_name","cityObj","logo1","logo2","map1","map2","attachments","photos","visit","benfit","facelities","recommend","url","latlng","errorMessages","isValid","validate","name","value","rf","indexOf","_this$state","state","error","type","regexType","errorMsg","setState","_this$state2","inputChange","e","_e$target","target","checked","_Users_user_Desktop_workspace_quorumweb_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","setChips","_this$setState2","id","onDrop","files","r","bulkFiles","uploadType","toggleUploader","isUploader","document","getElementById","click","setBulkPhotos","bulkCollection","f","thumbs","map","thumbnail","concat","_Users_user_Desktop_workspace_quorumweb_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","obj","image","isImageAdded","onSubmit","preventDefault","forEach","keys","isSaving","payload","assign","token","updatePageData","Endpoint","GLOBAL_ACCESS","method","action","page","dataToUpdate","key","response","status","toastmessage","message","closeModal","deleteItem","params","removeImage","index","collection","filter","item","i","imgUrls","fetchSuggestions","LOCATION","getIndividualItem","resetPageStore","prevProps","prevState","itemData","isObject","isObjEmpty","stateD","_this2","_this$state3","_this$props","continentList","itemLoader","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","_customFields_loader__WEBPACK_IMPORTED_MODULE_13__","Fragment","className","_customFields_uploader__WEBPACK_IMPORTED_MODULE_11__","onComplete","onBack","folder","isSideNav","isPopup","config","aspectRatio","_customFields_inputField__WEBPACK_IMPORTED_MODULE_10__","dom","placeholder","options","_customFields_chips__WEBPACK_IMPORTED_MODULE_12__","namespace","isFlag","livesearch","autocomplete","disabled","service","vk","sk","isSingle","chips","maxCount","onChange","react_dropzone__WEBPACK_IMPORTED_MODULE_9__","style","position","accept","multiple","accepted","rejected","backgroundImage","isFile","src","file","URL","createObjectURL","onClick","Component","connect","_ref","_ref$page","_ref$page$continentLi","_ref$page$individualI","individualItem","_ref$page$itemLoader","auth","dispatch","ownProps","myParam","cb"],"mappings":"mQAcMA,cACF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAMVQ,eAAiB,WAAe,IAAdC,EAAcC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GACrB,MAAO,CACHG,SAAUC,YAASL,EAAM,WAAY,IACrCM,UAAWD,YAASL,EAAM,YAAa,IACvCO,QAASF,YAASL,EAAM,UAAW,IACnCQ,KAAMH,YAASL,EAAM,OAAQ,IAC7BS,QAASJ,YAASL,EAAM,UAAW,IACnCU,aAAcV,EAAKW,WAAa,CAACX,EAAKW,YAAc,GACpDC,UAAWZ,EAAKa,QAAU,CAACb,EAAKa,SAAW,GAC3CC,MAAOT,YAASL,EAAM,QAAS,IAC/Be,MAAOV,YAASL,EAAM,QAAS,IAC/BgB,KAAMX,YAASL,EAAM,OAAQ,IAC7BiB,KAAMZ,YAASL,EAAM,OAAQ,IAC7BkB,YAAa,GACbC,OAAQd,YAASL,EAAM,SAAU,IACjCoB,MAAOf,YAASL,EAAM,QAAS,IAC/BqB,OAAQhB,YAASL,EAAM,SAAU,IACjCsB,WAAYjB,YAASL,EAAM,aAAc,IACzCuB,UAAWlB,YAASL,EAAM,YAAa,IACvCwB,IAAKnB,YAASL,EAAM,MAAO,IAC3ByB,OAAQpB,YAASL,EAAM,SAAU,IACjC0B,cAAe,GACfC,QAAS,KA7BEnC,EAqDnBoC,SAAW,SAACC,EAAMC,GACd,GAAItC,EAAKuC,GAAGC,QAAQH,IAAS,GAAKC,EAAO,KAAAG,EACJzC,EAAK0C,MAAhCP,EAD+BM,EAC/BN,QAASD,EADsBO,EACtBP,cACXS,EAAQP,YAASC,EAAMC,EAAO,CAAEM,KAAM,OAAQC,UAAoB,QAATR,EAAiB,MAAQ,SACtFF,EAAQE,GAAQM,EAAMR,QACtBQ,EAAMR,eACOD,EAAcG,GACpBH,EAAcG,GAAQM,EAAMG,SACnC9C,EAAK+C,SAAS,CAAEZ,UAASD,sBACtB,KAAAc,EAC8BhD,EAAK0C,MAAhCP,EADHa,EACGb,QAASD,EADZc,EACYd,cACfC,EAAQE,IAAQ,SACTH,EAAcG,GACrBrC,EAAK+C,SAAS,CAAEZ,UAASD,oBAlEdlC,EAsEnBiD,YAAc,SAAAC,GAAK,IAAAC,EAGXD,EADAE,OAAUf,EAFCc,EAEDd,KAAMC,EAFLa,EAEKb,MAAOe,EAFZF,EAEYE,QAAST,EAFrBO,EAEqBP,KAEpC5C,EAAK+C,SAAL9C,OAAAqD,EAAA,EAAArD,CAAA,GAAiBoC,EAAgB,aAATO,EAAsBS,EAAUf,GAAS,WAC7DtC,EAAKoC,SAASC,EAAMC,MA3ETtC,EA+EnBuD,SAAW,SAACjB,EAAOD,GAAoB,IAAAmB,EAAA/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACnCT,EAAK+C,UAALS,EAAA,GAAAvD,OAAAqD,EAAA,EAAArD,CAAAuD,EAAiBnB,EAAOC,GAASA,EAAM5B,OAAS4B,EAAM,GAAGmB,GAAK,IAA9DxD,OAAAqD,EAAA,EAAArD,CAAAuD,EAAmEnB,EAAO,QAAUC,GAApFkB,KAhFexD,EAmGnB0D,OAAS,SAACC,EAAOC,EAAGvB,GACZsB,EAAMjD,SACNV,EAAK+C,SAAS,CAAEc,UAAWF,EAAOG,WAAazB,IAC/CrC,EAAK+D,gBAAe,KAtGT/D,EA0GnB+D,eAAiB,SAACC,GACdhE,EAAK+C,SAAS,CAAEiB,cAAc,WACvBC,SAASC,eAAe,UAASD,SAASC,eAAe,SAASC,WA5G1DnE,EA+GnBoE,cAAgB,SAACC,EAAgBC,EAAGjC,GAChC,GAAKgC,GAAmBA,EAAe3D,OAAvC,CAGA,GAAY,gBAAT2B,EAAuB,CACvB,IAAIkC,EAASF,EAAeG,IAAI,SAACF,GAC7B,OAAOA,EAAEG,YAEbzE,EAAK+C,SAAL9C,OAAAqD,EAAA,EAAArD,CAAA,GAAiBoC,EAAjB,GAAAqC,OAAAzE,OAAA0E,EAAA,EAAA1E,CAA6BD,EAAK0C,MAAML,IAAxCpC,OAAA0E,EAAA,EAAA1E,CAAkDsE,WAEjDvE,EAAK+C,SAAL9C,OAAAqD,EAAA,EAAArD,CAAA,GAAiBoC,EAAOgC,EAAe,GAAGI,YAE9C,IAAIG,EAAMP,EAAe,GACzBrE,EAAK+C,SAAS,CAAE8B,MAAOD,EAAIH,UAAWT,YAAY,EAAOc,cAAc,GAAQ,WAC1Eb,SAASC,eAAe,UAASD,SAASC,eAAe,SAASC,YA7HxDnE,EAiInB+E,SAAW,SAAC7B,GAKR,GAJAA,EAAE8B,iBACFhF,EAAKuC,GAAG0C,QAAQ,SAAC5C,GACbrC,EAAKoC,SAASC,EAAMrC,EAAK0C,MAAML,MAEiB,GAAhDpC,OAAOiF,KAAKlF,EAAK0C,MAAMR,eAAexB,OAAa,CACnDV,EAAK+C,SAAS,CAAEJ,MAAO,GAAIwC,UAAU,IACrC,IAAIC,EAAUnF,OAAOoF,OAAO,GAAIrF,EAAK0C,OACrC0C,EAAQE,MAAQtF,EAAKD,MAAMuF,aACpBF,EAAQlD,qBACRkD,EAAQjD,QACXnC,EAAKD,MAAM0D,KACX2B,EAAQ3B,GAAKzD,EAAKD,MAAM0D,IAE5BzD,EAAKD,MAAMwF,eAAe,CACtBH,UACApD,IAAG,GAAA0C,OAAKc,IAASC,eAAdf,OAA8B1E,EAAKD,MAAM0D,GAAK,IAAMzD,EAAKD,MAAM0D,GAAK,IACvEiC,OAAQ,OACRC,OAAQ3F,EAAKD,MAAM0D,GAAK,SAAW,MACnCmC,KAAM,KAENC,aAAc,CAAC,CAAEC,IAAK,UAAWxD,OAAO,KACzC,SAACyD,GACIA,EAASC,QACThG,EAAK+C,SAAS,CAAEJ,MAAO,GAAIwC,UAAU,IACrCnF,EAAKD,MAAMkG,aAAaF,EAASG,SACjClG,EAAKD,MAAMoG,cAEXnG,EAAK+C,SAAS,CAAEJ,MAAOoD,EAASG,QAASf,UAAU,QA7JhDnF,EAmKnBoG,WAAa,SAAClD,GACVlD,EAAKD,MAAMwF,eAAe,CACtBH,QAAS,GACTiB,OAAQ,CAAEf,MAAOtF,EAAKD,MAAMuF,OAC5BtD,IAAG,GAAA0C,OAAKc,IAASC,cAAd,KAAAf,OAA+B1E,EAAKD,MAAM0D,IAC7CiC,OAAQ,SACRC,OAAQ,SACRC,KAAM,KACNC,aAAc,CAAC,CAAEC,IAAK,UAAWxD,OAAO,KACzC,SAACyD,GACIA,EAASC,QACThG,EAAK+C,SAAS,CAAEJ,MAAO,KACvB3C,EAAKD,MAAMkG,aAAaF,EAASG,SACjClG,EAAKD,MAAMoG,cAEXnG,EAAK+C,SAAS,CAAEJ,MAAOoD,EAASG,aAlLzBlG,EAuLnBsG,YAAc,SAACpD,EAAGqD,EAAOC,GACrBtD,EAAE8B,iBACFhF,EAAK+C,SAAL9C,OAAAqD,EAAA,EAAArD,CAAA,GACKuG,EAAaxG,EAAK0C,MAAM8D,GAAYC,OAAO,SAACC,EAAMC,GAC/C,OAAOA,GAAKJ,OAzLpBvG,EAAK4G,QAAU,GACf5G,EAAKuC,GAAK,CAAC,WAAY,YAAa,UAAW,OAAQ,WACvDvC,EAAK0C,MAAQ1C,EAAKO,iBAJHP,mFAkCfG,KAAKJ,MAAM8G,iBAAiB,CAAE7E,IAAG,GAAA0C,OAAKc,IAASsB,SAAd,0BAAApC,OAA+CvE,KAAKJ,MAAMuF,OAAS1C,KAAM,UACtGzC,KAAKJ,MAAM0D,IACXtD,KAAKJ,MAAMgH,kBAAkB,CACzBV,OAAQ,CAAEf,MAAOnF,KAAKJ,MAAMuF,OAC5BtD,IAAG,GAAA0C,OAAKc,IAASC,cAAd,KAAAf,OAA+BvE,KAAKJ,MAAM0D,qDAMrDtD,KAAKJ,MAAMiH,eAAe,6DAGXC,EAAWC,GAC1B,GAAI/G,KAAKJ,MAAM0D,IAAMwD,EAAUE,UAAYhH,KAAKJ,MAAMoH,UAAYC,YAASjH,KAAKJ,MAAMoH,YAAcE,YAAWlH,KAAKJ,MAAMoH,YAAchH,KAAKuC,MAAMsB,WAAY,CAC3J,IAAIsD,EAASnH,KAAKI,eAAeJ,KAAKJ,MAAMoH,UAC5ChH,KAAK4C,SAASuE,qCA8Ib,IAAAC,EAAApH,KAAAqH,EACiPrH,KAAKuC,MAArPmB,EADD2D,EACC3D,UAAWG,EADZwD,EACYxD,WAAYF,EADxB0D,EACwB1D,WAAYqB,EADpCqC,EACoCrC,SAAUvE,EAD9C4G,EAC8C5G,SAAUE,EADxD0G,EACwD1G,UAAWC,EADnEyG,EACmEzG,QAAeE,GADlFuG,EAC4ExG,KAD5EwG,EACkFvG,SAASG,EAD3FoG,EAC2FpG,UAAWF,EADtGsG,EACsGtG,aAAcI,EADpHkG,EACoHlG,MAAOC,EAD3HiG,EAC2HjG,MAAOG,EADlI8F,EACkI9F,YAAaQ,EAD/IsF,EAC+ItF,cAAeC,EAD9JqF,EAC8JrF,QAASP,EADvK4F,EACuK5F,MAAOC,EAD9K2F,EAC8K3F,OAAQC,EADtL0F,EACsL1F,WAAYC,EADlMyF,EACkMzF,UAAWC,EAD7MwF,EAC6MxF,IAAKC,EADlNuF,EACkNvF,OAAQN,EAD1N6F,EAC0N7F,OAAQH,EADlOgG,EACkOhG,KAAMC,EADxO+F,EACwO/F,KADxOgG,EAE0CtH,KAAKJ,MAA9C2H,EAFDD,EAECC,cAAepC,EAFhBmC,EAEgBnC,MAAO7B,EAFvBgE,EAEuBhE,GAC5B,OAHKgE,EAE2BE,WACPC,EAAAC,EAAAC,cAACC,EAAA,QAAD,MACjBH,EAAAC,EAAAC,cAACF,EAAAC,EAAMG,SAAP,KACHhE,GACG4D,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBACXL,EAAAC,EAAAC,cAACI,EAAA,QAAD,CACIvE,MAAOE,EACPsE,WAAYhI,KAAKiE,cACjBgE,OAAQjI,KAAK4D,eACbsE,OAAQ,eACRvE,WAAYA,EACZwE,UAA0B,gBAAfxE,EAEXyE,SAAS,EACTC,OAAQ,CAAEC,YAAa,UAGjCzE,GACF4D,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gCACXL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,YAAYxE,GAAG,SAASA,EAAK,gBAAkB,kBAC5DmE,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SAAQL,EAAAC,EAAAC,cAAA,SAAOG,UAAU,aAAjB,iBACvBL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAACY,EAAA,QAAD,CAAYrG,KAAK,WAAWC,MAAO1B,EAAUuB,QAASA,EAAQvB,SAAUkC,SAAUZ,EAActB,SAC5FqC,YAAa9C,KAAK8C,YAAa0F,IAAK,CAAEC,YAAa,oBAG/DhB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SAAQL,EAAAC,EAAAC,cAAA,SAAOG,UAAU,aAAjB,cACvBL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAACY,EAAA,QAAD,CAAYrG,KAAK,YAAYC,MAAOxB,EAAWqB,QAASA,EAAQrB,UAAWgC,SAAUZ,EAAcpB,UAC/FmC,YAAa9C,KAAK8C,YAAa4F,QAASnB,EAAeiB,IAAK,CAAEC,YAAa,mBAAoBhG,KAAM,cAGjHgF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SAAQL,EAAAC,EAAAC,cAAA,SAAOG,UAAU,aAAjB,YACvBL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAACgB,EAAA,QAAD,CACIF,YAAY,UACZX,UAAU,iBACV5F,KAAK,UACL0G,UAAU,cACVC,QAAShF,EACTiF,YAAY,EACZC,cAAc,EACdC,UAAWrI,EACXsI,QAAO,GAAA1E,OAAKc,IAASsB,SAAd,wBAAApC,OAA6CY,EAA7C,SAAAZ,OAA0D5D,GACjEuI,GAAG,KACHC,GAAG,OACHC,UAAU,EACVC,MAAOtI,EACPuI,SAAU,EACVlG,SAAUpD,KAAKoD,aAI3BqE,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SAAQL,EAAAC,EAAAC,cAAA,SAAOG,UAAU,aAAjB,SACvBL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAACgB,EAAA,QAAD,CACIF,YAAY,OACZX,UAAU,iBACVkB,UAAWpI,EACXsB,KAAK,OACL2G,QAAShF,EACT+E,UAAU,WACVE,YAAY,EACZC,cAAc,EACdE,QAAO,GAAA1E,OAAKc,IAASsB,SAAd,qBAAApC,OAA0CY,EAA1C,SAAAZ,OAAuD3D,GAC9DsI,GAAG,KACHC,GAAG,OACHE,MAAOpI,EACPmI,UAAU,EACVE,SAAU,EACVlG,SAAUpD,KAAKoD,aAI3BqE,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SAAQL,EAAAC,EAAAC,cAAA,SAAOG,UAAU,aAAjB,aACvBL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAACY,EAAA,QAAD,CAAYrG,KAAK,SAASC,MAAOL,EAAQE,QAASA,EAAQF,OAAQa,SAAUZ,EAAcD,OACtFgB,YAAa9C,KAAK8C,YAAa0F,IAAK,CAAEC,YAAa,WAAYhG,KAAM,YAGjFgF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SAAQL,EAAAC,EAAAC,cAAA,SAAOG,UAAU,aAAjB,QACvBL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAACY,EAAA,QAAD,CAAYrG,KAAK,MAAMC,MAAON,EAAKG,QAASA,EAAQH,IAAKc,SAAUZ,EAAcF,IAC7EiB,YAAa9C,KAAK8C,YAAa0F,IAAK,CAAEC,YAAa,MAAOhG,KAAM,YAG5EgF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SAAQL,EAAAC,EAAAC,cAAA,SAAOG,UAAU,aAAjB,YACvBL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,YAAUG,UAAU,qBAAqB5F,KAAK,UAAUC,MAAOrB,EAASyI,SAAUvJ,KAAK8C,eACrFd,EAAQlB,SAAW2G,EAAAC,EAAAC,cAAA,KAAGG,UAAU,aAAb,IAA2B/F,EAAcjB,WAGtE2G,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SAAQL,EAAAC,EAAAC,cAAA,SAAOG,UAAU,aAAjB,eACvBL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,YAAUG,UAAU,qBAAqB5F,KAAK,aAAaC,MAAOR,EAAY4H,SAAUvJ,KAAK8C,eAC3Fd,EAAQL,YAAc8F,EAAAC,EAAAC,cAAA,KAAGG,UAAU,aAAb,IAA2B/F,EAAcJ,cAGzE8F,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SAAQL,EAAAC,EAAAC,cAAA,SAAOG,UAAU,aAAjB,mBACvBL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,YAAUG,UAAU,qBAAqB5F,KAAK,YAAYC,MAAOP,EAAW2H,SAAUvJ,KAAK8C,eACzFd,EAAQJ,WAAa6F,EAAAC,EAAAC,cAAA,KAAGG,UAAU,aAAb,IAA2B/F,EAAcH,aAGxE6F,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SAAQL,EAAAC,EAAAC,cAAA,SAAOG,UAAU,aAAjB,YACvBL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,YAAUG,UAAU,qBAAqB5F,KAAK,SAASC,MAAOT,EAAQ6H,SAAUvJ,KAAK8C,eACnFd,EAAQN,QAAU+F,EAAAC,EAAAC,cAAA,KAAGG,UAAU,aAAb,IAA2B/F,EAAcL,UAGrE+F,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SAAQL,EAAAC,EAAAC,cAAA,SAAOG,UAAU,aAAjB,WACvBL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,YAAUG,UAAU,qBAAqB5F,KAAK,QAAQC,MAAOV,EAAO8H,SAAUvJ,KAAK8C,eACjFd,EAAQP,OAASgG,EAAAC,EAAAC,cAAA,KAAGG,UAAU,aAAb,IAA2B/F,EAAcN,WAK5EgG,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SAEXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,4BACXL,EAAAC,EAAAC,cAAA,SAAOG,UAAU,iBAAjB,cACAL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eACXL,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CACIC,MAAO,CAAEC,SAAU,YACnBC,OAAO,wBACPC,UAAU,EACVrG,OAAQ,SAACsG,EAAUC,GAAe1C,EAAK7D,OAAOsG,EAAUC,EAAU,WAGlErC,EAAAC,EAAAC,cAAA,OAAKG,UAAW,0CAA4C3G,GAAS,aAAcsI,MAAO,CAAEM,gBAAe,OAAAxF,OAAUyF,YAAO7I,GAASnB,KAAKyG,QAAQtF,MAAQA,EAA/C,OACvGsG,EAAAC,EAAAC,cAAA,OAAKsC,IAAK,4BAA6BnC,UAAU,eAK7DL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACXL,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CACIC,MAAO,CAAEC,SAAU,YACnBC,OAAO,wBACPC,UAAU,EACVrG,OAAQ,SAACsG,EAAUC,GAAe1C,EAAK7D,OAAOsG,EAAUC,EAAU,WAGlErC,EAAAC,EAAAC,cAAA,OAAKG,UAAW,0CAA4C1G,GAAS,aAAcqI,MAAO,CAAEM,gBAAe,OAAAxF,OAAUyF,YAAO5I,GAASpB,KAAKyG,QAAQrF,MAAQA,EAA/C,OACvGqG,EAAAC,EAAAC,cAAA,OAAKsC,IAAK,4BAA6BnC,UAAU,gBAKjEL,EAAAC,EAAAC,cAAA,SAAOG,UAAU,aAAjB,aACAL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eACXL,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CACIC,MAAO,CAAEC,SAAU,YACnBC,OAAO,wBACPC,UAAU,EACVrG,OAAQ,SAACsG,EAAUC,GAAe1C,EAAK7D,OAAOsG,EAAUC,EAAU,UAClErC,EAAAC,EAAAC,cAAA,OAAKG,UAAW,0CAA4CzG,GAAQ,aAAcoI,MAAO,CAAEM,gBAAe,OAAAxF,OAAUyF,YAAO3I,GAAQrB,KAAKyG,QAAL,KAAuBpF,EAAhD,OACtGoG,EAAAC,EAAAC,cAAA,OAAKsC,IAAK,4BAA6BnC,UAAU,eAK7DL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACXL,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CACIC,MAAO,CAAEC,SAAU,YACnBC,OAAO,wBACPC,UAAU,EACVrG,OAAQ,SAACsG,EAAUC,GAAe1C,EAAK7D,OAAOsG,EAAUC,EAAU,UAClErC,EAAAC,EAAAC,cAAA,OAAKG,UAAW,0CAA4CxG,GAAQ,aAAcmI,MAAO,CAAEM,gBAAe,OAAAxF,OAAUyF,YAAO1I,GAAOtB,KAAKyG,QAAL,KAAuBnF,EAA/C,OACtGmG,EAAAC,EAAAC,cAAA,OAAKsC,IAAK,4BAA6BnC,UAAU,gBAKjEL,EAAAC,EAAAC,cAAA,SAAOG,UAAU,aAAjB,eACAL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iCACXL,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CACIC,MAAO,CAAEC,SAAU,YACnBC,OAAO,wBACPC,UAAU,EACVrG,OAAQ,SAACsG,EAAUC,GAAe1C,EAAK7D,OAAOsG,EAAUC,EAAU,eAAe,KACjFrC,EAAAC,EAAAC,cAAA,OAAKsC,IAAI,2BAA2BnC,UAAU,cAGrDtG,EAAOjB,OAAS,GAAKiB,EAAO6C,IAAI,SAAC6F,EAAM1D,GACpC,OACIiB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,mBAAmBnC,IAAK,QAAUa,GAC7CiB,EAAAC,EAAAC,cAAA,OAAKG,UAAW,sCAA8C2B,MAAO,CAAEM,gBAAe,OAAAxF,OAAUyF,YAAOE,GAAQC,IAAIC,gBAAgBF,GAAQA,EAAKxF,MAA1D,OAClF+C,EAAAC,EAAAC,cAAA,OAAKsC,IAAK,4BAA6BnC,UAAU,aAErDL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,YAAYuC,QAAS,SAACtH,GAAD,OAAOqE,EAAKjB,YAAYpD,EAAGyD,EAAG,YAAnE,QAMXjF,EAAYhB,OAAS,GAAKgB,EAAY8C,IAAI,SAAC6F,EAAM1D,GAC9C,OACIiB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,mBAAmBnC,IAAK,QAAUa,GAC7CiB,EAAAC,EAAAC,cAAA,OAAKG,UAAW,sCAA8C2B,MAAO,CAAEM,gBAAe,OAAAxF,OAAS2F,EAAT,OAClFzC,EAAAC,EAAAC,cAAA,OAAKsC,IAAK,4BAA6BnC,UAAU,aAErDL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,YAAYuC,QAAS,SAACtH,GAAD,OAAOqE,EAAKjB,YAAYpD,EAAGyD,EAAG,iBAAnE,YAU5BiB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,mBACVxE,GAAMmE,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WAAWuC,QAASrK,KAAKiG,YAAxC,UACPwB,EAAAC,EAAAC,cAAA,OAAKG,UAAS,OAAAvD,OAASS,EAAW,cAAgB,IAAMqF,QAASrK,KAAK4E,UAAWtB,EAAK,SAAW,kBA3a7FgH,aA8bTC,sBAJf,SAAAC,GAA+H,IAAAC,EAAAD,EAApG/E,KAAoGiF,EAAAD,EAA5FlD,qBAA4F,IAAAmD,EAA5E,GAA4EA,EAAAC,EAAAF,EAAxEG,eAAkBvK,YAAsD,IAAAsK,EAA/C,GAA+CA,EAAAE,EAAAJ,EAAzCjD,WAClF,MAAO,CAAED,gBAAeP,SAAU3G,EAAMmH,gBADmF,IAAAqD,KACvE1F,MADuEqF,EAAnBM,KAAQ3F,QARzF,SAAU4F,EAAUC,GAC3C,MAAO,CACHtE,iBAAkB,SAAAuE,GAAO,OAAIF,EAASrE,YAAiBuE,EAAS,mBAChE7F,eAAgB,SAAC6F,EAASC,GAAV,OAAiBH,EAAS3F,YAAe6F,EAASC,KAClEtE,kBAAmB,SAACqE,GAAD,OAAaF,EAASnE,YAAkBqE,KAC3DpE,eAAgB,SAAAoE,GAAO,OAAIF,EAASlE,YAAeoE,OAO5CV,CAA6C5K","file":"static/js/9.be0893e8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Dropzone from 'react-dropzone';\n\nimport InputField from '../customFields/inputField';\nimport Uploader from '../customFields/uploader';\nimport Chips from '../customFields/chips';\nimport Loader from '../customFields/loader';\nimport { getValue, isFile } from '../../utils/formatter';\nimport { isObject, isObjEmpty } from '../../utils';\nimport { validate } from '../../utils/validation';\nimport { Endpoint } from '../../utils/constants';\nimport { updatePageData, getIndividualItem, resetPageStore, fetchSuggestions } from '../../actions/page';\n\nclass AddGlobal extends Component {\n    constructor(props) {\n        super(props);\n        this.imgUrls = {};\n        this.rf = [\"clubName\", \"continent\", \"country\", \"city\", \"address\"];\n        this.state = this.intialiseState();\n    }\n\n    intialiseState = (data = {}) => {\n        return {\n            clubName: getValue(data, 'clubName', ''),\n            continent: getValue(data, 'continent', ''),\n            country: getValue(data, 'country', ''),\n            city: getValue(data, 'city', ''),\n            address: getValue(data, 'address', ''),\n            country_name: data.countryObj ? [data.countryObj] : [],\n            city_name: data.cityObj ? [data.cityObj] : [],\n            logo1: getValue(data, 'logo1', ''),\n            logo2: getValue(data, 'logo2', ''),\n            map1: getValue(data, 'map1', ''),\n            map2: getValue(data, 'map2', ''),\n            attachments: [],\n            photos: getValue(data, 'photos', []),\n            visit: getValue(data, 'visit', ''),\n            benfit: getValue(data, 'benfit', ''),\n            facelities: getValue(data, 'facelities', ''),\n            recommend: getValue(data, 'recommend', ''),\n            url: getValue(data, 'url', ''),\n            latlng: getValue(data, 'latlng', ''),\n            errorMessages: {},\n            isValid: {}\n        }\n    }\n\n    componentDidMount() {\n        this.props.fetchSuggestions({ url: `${Endpoint.LOCATION}?type=continent&token=${this.props.token}`, type: 'combo' });\n        if (this.props.id) {\n            this.props.getIndividualItem({\n                params: { token: this.props.token },\n                url: `${Endpoint.GLOBAL_ACCESS}/${this.props.id}`\n            });\n        }\n    }\n\n    componentWillUnmount() {\n        this.props.resetPageStore('individualItem');\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.id && prevProps.itemData != this.props.itemData && isObject(this.props.itemData) && !isObjEmpty(this.props.itemData) && !this.state.isUploader) {\n            let stateD = this.intialiseState(this.props.itemData);\n            this.setState(stateD);\n        }\n    }\n    validate = (name, value) => {\n        if (this.rf.indexOf(name) > -1 || value) {\n            let { isValid, errorMessages } = this.state;\n            let error = validate(name, value, { type: 'text', regexType: name === 'url' ? 'url' : 'noop' });\n            isValid[name] = error.isValid;\n            error.isValid\n                ? delete errorMessages[name]\n                : (errorMessages[name] = error.errorMsg);\n            this.setState({ isValid, errorMessages });\n        } else {\n            let { isValid, errorMessages } = this.state;\n            isValid[name] = true;\n            delete errorMessages[name];\n            this.setState({ isValid, errorMessages });\n        }\n    };\n\n    inputChange = e => {\n        let {\n            target: { name, value, checked, type }\n        } = e;\n        this.setState({ [name]: type === 'checkbox' ? checked : value }, () => {\n            this.validate(name, value);\n        });\n    };\n\n    setChips = (value, name, item = {}) => {\n        this.setState({ [name]: value && value.length ? value[0].id : '', [name + '_name']: value });\n    };\n\n    // onDrop = (a, r, name, im = false) => {\n    //     if (r.length || !a.length) {\n    //         return\n    //     }\n    //     if(im){\n    //         this.imgUrls[name] = this.imgUrls[name] || [];\n    //         this.imgUrls[name] = a.map((file)=>{\n    //             return URL.createObjectURL(file);\n    //         })\n    //     }else{\n    //         this.imgUrls[name] = URL.createObjectURL(a[0]);\n    //     }\n    //     this.setState({ [name]: !im ? a[0] : [...this.state[name], ...a], isImageAdded: true });\n    //     // URL.createObjectURL(object);\n    // }\n\n    onDrop = (files, r, name) => {\n        if (files.length) {\n            this.setState({ bulkFiles: files, uploadType:  name});\n            this.toggleUploader(true);\n        }\n    }\n\n    toggleUploader = (isUploader) => {\n        this.setState({ isUploader }, ()=>{\n            if(document.getElementById('click'))document.getElementById('click').click();\n        });\n    }\n    setBulkPhotos = (bulkCollection, f, name) => {\n        if (!bulkCollection || !bulkCollection.length) {\n            return;\n        }\n        if(name === 'attachments'){\n           let thumbs = bulkCollection.map((f)=>{\n               return f.thumbnail;\n           })\n           this.setState({ [name]:  [...this.state[name], ...thumbs] });\n        }else{\n            this.setState({ [name]: bulkCollection[0].thumbnail });\n        }\n        var obj = bulkCollection[0];\n        this.setState({ image: obj.thumbnail, isUploader: false, isImageAdded: true }, ()=>{\n          if(document.getElementById('click'))document.getElementById('click').click();\n        });\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.rf.forEach((name) => {\n            this.validate(name, this.state[name]);\n        });\n        if (Object.keys(this.state.errorMessages).length == 0) {\n            this.setState({ error: '', isSaving: true });\n            let payload = Object.assign({}, this.state);\n            payload.token = this.props.token\n            delete payload.errorMessages;\n            delete payload.isValid;\n            if (this.props.id) {\n                payload.id = this.props.id;\n            }\n            this.props.updatePageData({\n                payload,\n                url: `${Endpoint.GLOBAL_ACCESS}${this.props.id ? '/' + this.props.id : ''}`,\n                method: 'POST',\n                action: this.props.id ? \"update\" : 'add',\n                page: 'ga',\n                //isMultipart: true,\n                dataToUpdate: [{ key: 'refresh', value: true }]\n            }, (response) => {\n                if (response.status) {\n                    this.setState({ error: '', isSaving: false });\n                    this.props.toastmessage(response.message);\n                    this.props.closeModal();\n                } else {\n                    this.setState({ error: response.message, isSaving: false })\n                }\n            });\n        }\n    }\n\n    deleteItem = (e) => {\n        this.props.updatePageData({\n            payload: {},\n            params: { token: this.props.token },\n            url: `${Endpoint.GLOBAL_ACCESS}/${this.props.id}`,\n            method: 'DELETE',\n            action: 'delete',\n            page: 'ga',\n            dataToUpdate: [{ key: 'refresh', value: true }]\n        }, (response) => {\n            if (response.status) {\n                this.setState({ error: '' });\n                this.props.toastmessage(response.message);\n                this.props.closeModal();\n            } else {\n                this.setState({ error: response.message })\n            }\n        });\n    }\n\n    removeImage = (e, index, collection) => {\n        e.preventDefault();\n        this.setState({\n            [collection]: this.state[collection].filter((item, i) => {\n                return i != index;\n            })\n        })\n    }\n\n    render() {\n        let { bulkFiles, isUploader, uploadType, isSaving, clubName, continent, country, city, address, city_name, country_name, logo1, logo2, attachments, errorMessages, isValid, visit, benfit, facelities, recommend, url, latlng, photos, map1, map2 } = this.state;\n        let { continentList, token, id, itemLoader } = this.props;\n        if (itemLoader) { return <Loader /> }\n        return (<React.Fragment>\n            {isUploader && (\n                <div className='editProfile mt30'>\n                    <Uploader\n                        files={bulkFiles}\n                        onComplete={this.setBulkPhotos}\n                        onBack={this.toggleUploader}\n                        folder={'globalAccess'}\n                        uploadType={uploadType}\n                        isSideNav={uploadType === 'attachments' ? true : false}\n                        //not_upload={true}\n                        isPopup={true}\n                        config={{ aspectRatio: 'p2' }} />\n                </div>\n            )}\n            {!isUploader &&\n            <div className='eventModal globalAccessModal'>\n                <p className='title-txt' id=\"click\">{id ? \"EDIT NEW CLUB\" : \"ADD A NEW CLUB\"}</p>\n                <div className='row no-gutters'>\n                    <div className='col-6'>\n                        <div className='left-content'>\n                            <div className='row no-gutters'>\n                                <div className='col-3'><label className='label-txt'>Name of Club</label></div>\n                                <div className='col-9'>\n                                    <InputField name=\"clubName\" value={clubName} isValid={isValid.clubName} errorMsg={errorMessages.clubName}\n                                        inputChange={this.inputChange} dom={{ placeholder: 'Name of Club' }} />\n                                </div>\n                            </div>\n                            <div className='row no-gutters'>\n                                <div className='col-3'><label className='label-txt'>Continent</label></div>\n                                <div className='col-9'>\n                                    <InputField name=\"continent\" value={continent} isValid={isValid.continent} errorMsg={errorMessages.continent}\n                                        inputChange={this.inputChange} options={continentList} dom={{ placeholder: 'Select Continent', type: 'select' }} />\n                                </div>\n                            </div>\n                            <div className='row no-gutters'>\n                                <div className='col-3'><label className='label-txt'>Country</label></div>\n                                <div className='col-9'>\n                                    <Chips\n                                        placeholder=\"Country\"\n                                        className=\"checkIn-search\"\n                                        name=\"country\"\n                                        namespace=\"countryList\"\n                                        isFlag={!isUploader}\n                                        livesearch={true}\n                                        autocomplete={false}\n                                        disabled={!continent}\n                                        service={`${Endpoint.LOCATION}?type=country&token=${token}&pid=${continent}`}\n                                        vk=\"id\"\n                                        sk=\"name\"\n                                        isSingle={true}\n                                        chips={country_name}\n                                        maxCount={1}\n                                        setChips={this.setChips}\n                                    />\n                                </div>\n                            </div>\n                            <div className='row no-gutters'>\n                                <div className='col-3'><label className='label-txt'>City</label></div>\n                                <div className='col-9'>\n                                    <Chips\n                                        placeholder=\"City\"\n                                        className=\"checkIn-search\"\n                                        disabled={!country}\n                                        name=\"city\"\n                                        isFlag={!isUploader}\n                                        namespace=\"cityList\"\n                                        livesearch={true}\n                                        autocomplete={false}\n                                        service={`${Endpoint.LOCATION}?type=city&token=${token}&pid=${country}`}\n                                        vk=\"id\"\n                                        sk=\"name\"\n                                        chips={city_name}\n                                        isSingle={true}\n                                        maxCount={1}\n                                        setChips={this.setChips}\n                                    />\n                                </div>\n                            </div>\n                            <div className='row no-gutters'>\n                                <div className='col-3'><label className='label-txt'>Location</label></div>\n                                <div className='col-9'>\n                                    <InputField name=\"latlng\" value={latlng} isValid={isValid.latlng} errorMsg={errorMessages.latlng}\n                                        inputChange={this.inputChange} dom={{ placeholder: 'Location', type: 'text' }} />\n                                </div>\n                            </div>\n                            <div className='row no-gutters'>\n                                <div className='col-3'><label className='label-txt'>URL</label></div>\n                                <div className='col-9'>\n                                    <InputField name=\"url\" value={url} isValid={isValid.url} errorMsg={errorMessages.url}\n                                        inputChange={this.inputChange} dom={{ placeholder: 'URL', type: 'text' }} />\n                                </div>\n                            </div>\n                            <div className='row no-gutters'>\n                                <div className='col-3'><label className='label-txt'>Address</label></div>\n                                <div className='col-9'>\n                                    <textarea className='input-style h100px' name=\"address\" value={address} onChange={this.inputChange}></textarea>\n                                    {!isValid.address && <p className=\"error_msg\"> {errorMessages.address}</p>}\n                                </div>\n                            </div>\n                            <div className='row no-gutters'>\n                                <div className='col-3'><label className='label-txt'>Facelities</label></div>\n                                <div className='col-9'>\n                                    <textarea className='input-style h100px' name=\"facelities\" value={facelities} onChange={this.inputChange}></textarea>\n                                    {!isValid.facelities && <p className=\"error_msg\"> {errorMessages.facelities}</p>}\n                                </div>\n                            </div>\n                            <div className='row no-gutters'>\n                                <div className='col-3'><label className='label-txt'>Recommendation</label></div>\n                                <div className='col-9'>\n                                    <textarea className='input-style h100px' name=\"recommend\" value={recommend} onChange={this.inputChange}></textarea>\n                                    {!isValid.recommend && <p className=\"error_msg\"> {errorMessages.recommend}</p>}\n                                </div>\n                            </div>\n                            <div className='row no-gutters'>\n                                <div className='col-3'><label className='label-txt'>Benfits</label></div>\n                                <div className='col-9'>\n                                    <textarea className='input-style h100px' name=\"benfit\" value={benfit} onChange={this.inputChange}></textarea>\n                                    {!isValid.benfit && <p className=\"error_msg\"> {errorMessages.benfit}</p>}\n                                </div>\n                            </div>\n                            <div className='row no-gutters'>\n                                <div className='col-3'><label className='label-txt'>Visits</label></div>\n                                <div className='col-9'>\n                                    <textarea className='input-style h100px' name=\"visit\" value={visit} onChange={this.inputChange}></textarea>\n                                    {!isValid.visit && <p className=\"error_msg\"> {errorMessages.visit}</p>}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='col-6'>\n                        {/* <p className='label-txt p0 uplodSize'>Upload Size - 200 X 200</p> */}\n                        <div className='right-content img-scroll'>\n                            <label className='label-txt pt0'>Club Logos</label>\n                            <div className='d-flex'>\n                                <div className='min100 mr10'>\n                                    <Dropzone\n                                        style={{ position: 'relative' }}\n                                        accept=\"image/jpeg, image/png\"\n                                        multiple={false}\n                                        onDrop={(accepted, rejected) => { this.onDrop(accepted, rejected, 'logo1') }}>\n                                        {/* <img src={logo1 ? (isFile(logo1) ? URL.createObjectURL(logo1) : logo1) : '/images/imagesize1_1.png'} className='w100per' /> */}\n\n                                        <div className={'image-style upload-photo  upload-logo ' + (logo1 && 'uploadtxt')} style={{ backgroundImage: `url(${(isFile(logo1) ? this.imgUrls.logo1 : logo1)})` }}>\n                                            <img src={'./images/imagesize1_1.png'} className='w100per' />\n                                        </div>\n                                    </Dropzone>\n                                </div>\n\n                                <div className='min100'>\n                                    <Dropzone\n                                        style={{ position: 'relative' }}\n                                        accept=\"image/jpeg, image/png\"\n                                        multiple={false}\n                                        onDrop={(accepted, rejected) => { this.onDrop(accepted, rejected, 'logo2') }}>\n                                        {/* <img src={logo2 ? (isFile(logo2) ? URL.createObjectURL(logo2) : logo2) : '/images/imagesize1_1.png'} className='w100per' /> */}\n\n                                        <div className={'image-style upload-photo upload-logo  ' + (logo2 && 'uploadtxt')} style={{ backgroundImage: `url(${(isFile(logo2) ? this.imgUrls.logo2 : logo2)})` }}>\n                                            <img src={'./images/imagesize1_1.png'} className='w100per' />\n                                        </div>\n                                    </Dropzone>\n                                </div>\n                            </div>\n                            <label className='label-txt'>Club Maps</label>\n                            <div className='d-flex'>\n                                <div className='min100 mr10'>\n                                    <Dropzone\n                                        style={{ position: 'relative' }}\n                                        accept=\"image/jpeg, image/png\"\n                                        multiple={false}\n                                        onDrop={(accepted, rejected) => { this.onDrop(accepted, rejected, 'map1') }}>\n                                        <div className={'image-style upload-photo  upload-logo ' + (map1 && 'uploadtxt')} style={{ backgroundImage: `url(${(isFile(map1) ? this.imgUrls['map1'] : map1)})` }}>\n                                            <img src={'./images/imagesize1_1.png'} className='w100per' />\n                                        </div>\n                                    </Dropzone>\n                                </div>\n\n                                <div className='min100'>\n                                    <Dropzone\n                                        style={{ position: 'relative' }}\n                                        accept=\"image/jpeg, image/png\"\n                                        multiple={false}\n                                        onDrop={(accepted, rejected) => { this.onDrop(accepted, rejected, 'map2') }}>\n                                        <div className={'image-style upload-photo upload-logo  ' + (map2 && 'uploadtxt')} style={{ backgroundImage: `url(${(isFile(map2) ?this.imgUrls['map2'] : map2)})` }}>\n                                            <img src={'./images/imagesize1_1.png'} className='w100per' />\n                                        </div>\n                                    </Dropzone>\n                                </div>\n                            </div>\n                            <label className='label-txt'>Club Photos</label>\n                            <div className='d-flex flex-wrap'>\n                                <div className='image-style upload-photo mb10'>\n                                    <Dropzone\n                                        style={{ position: 'relative' }}\n                                        accept=\"image/jpeg, image/png\"\n                                        multiple={true}\n                                        onDrop={(accepted, rejected) => { this.onDrop(accepted, rejected, 'attachments', true) }}>\n                                        <img src='/images/imagesize1_1.png' className='w100per' />\n                                    </Dropzone>\n                                </div>\n                                {photos.length > 0 && photos.map((file, i) => {\n                                    return (\n                                        <div className='image-style mb10' key={'file_' + i}>\n                                            <div className={'image-style upload-photo  ' + ('uploadtxt')} style={{ backgroundImage: `url(${(isFile(file) ? URL.createObjectURL(file) : file.image)})` }}>\n                                                <img src={'./images/imagesize1_1.png'} className='w100per' />\n                                            </div>\n                                            <span className='deleteBtn' onClick={(e) => this.removeImage(e, i, 'photos')}>+</span>\n                                            {/* <img src={file ? (isFile(file) ? URL.createObjectURL(file) : file.image) : '/images/imagesize1_1.png'} className='w100per' /> */}\n                                        </div>\n                                    )\n                                })\n                                }\n                                {attachments.length > 0 && attachments.map((file, i) => {\n                                    return (\n                                        <div className='image-style mb10' key={'file_' + i}>\n                                            <div className={'image-style upload-photo  ' + ('uploadtxt')} style={{ backgroundImage: `url(${file})` }}>\n                                                <img src={'./images/imagesize1_1.png'} className='w100per' />\n                                            </div>\n                                            <span className='deleteBtn' onClick={(e) => this.removeImage(e, i, 'attachments')}>+</span>\n                                            {/* <img src={file ? (isFile(file) ? URL.createObjectURL(file) : file.image) : '/images/imagesize1_1.png'} className='w100per' /> */}\n                                        </div>\n                                    )\n                                })\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className='text-right mt20'>\n                    {id && <div className='btn mr10' onClick={this.deleteItem}>delete</div>}\n                    <div className={`btn ${isSaving ? 'btndisabled' : ''}`} onClick={this.onSubmit}>{id ? 'update' : 'save'}</div>\n                </div>\n            </div>}\n            </React.Fragment>\n        );\n    }\n}\nconst mapDispatchToProps = function (dispatch, ownProps) {\n    return {\n        fetchSuggestions: myParam => dispatch(fetchSuggestions(myParam, 'continentList')),\n        updatePageData: (myParam, cb) => dispatch(updatePageData(myParam, cb)),\n        getIndividualItem: (myParam) => dispatch(getIndividualItem(myParam)),\n        resetPageStore: myParam => dispatch(resetPageStore(myParam))\n    };\n};\nfunction mapStateToProps({ page: { continentList = [], individualItem: { data = {} }, itemLoader = false }, auth: { token } }) {\n    return { continentList, itemData: data, itemLoader, token };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddGlobal);\n"],"sourceRoot":""}