{"version":3,"sources":["components/Qspecial/Qspecial.js"],"names":["Qspecial","props","_this","Object","_Users_user_Desktop_workspace_quorumweb_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_user_Desktop_workspace_quorumweb_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_user_Desktop_workspace_quorumweb_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","intialiseState","data","arguments","length","undefined","isinit","image","getValue","category","errorMessages","isValid","validate","name","value","_this$state","state","error","type","errorMsg","setState","inputChange","e","_e$target","target","checked","_Users_user_Desktop_workspace_quorumweb_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","onSubmit","preventDefault","keys","isSaving","payload","assign","token","updatePageData","url","concat","Endpoint","QSPECIAL_MANAGE","id","method","action","page","response","status","toastmessage","message","closeModal","deleteItem","params","onDrop","files","bulkFiles","toggleUploader","isUploader","setBulkPhotos","bulkCollection","obj","thumbnail","isImageAdded","getIndividualItem","resetPageStore","prevProps","prevState","itemData","isObject","isObjEmpty","stateD","_this2","_this$state2","_this$props","qsCatList","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","Fragment","className","_customFields_uploader__WEBPACK_IMPORTED_MODULE_15__","onComplete","onBack","folder","tempId","uploadType","isSideNav","config","aspectRatio","not_upload","isPopup","buttons","react_dropzone__WEBPACK_IMPORTED_MODULE_8__","style","position","accept","multiple","accepted","rejected","backgroundImage","src","alt","_customFields_inputField__WEBPACK_IMPORTED_MODULE_9__","options","dom","placeholder","onClick","Component","connect","_ref","auth","_ref$page","_ref$page$individualI","individualItem","_ref$page$itemLoader","itemLoader","_ref$page$qsCatList"],"mappings":"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","file":"static/js/6.67aa64c6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Dropzone from 'react-dropzone';\n\nimport InputField from '../customFields/inputField';\nimport { isObject, isObjEmpty } from '../../utils';\nimport { getValue } from '../../utils/formatter';\nimport { validate } from '../../utils/validation';\nimport { updatePageData, getIndividualItem, resetPageStore } from '../../actions/page';\nimport { Endpoint } from '../../utils/constants';\nimport Uploader from '../customFields/uploader';\n\n\nclass Qspecial extends Component {\n    constructor(props) {\n        super(props);\n        this.state = this.intialiseState();\n    }\n\n    intialiseState = (data = {}, isinit = true) => {\n        return {\n            image: getValue(data, 'photo'),\n            category: getValue(data, 'category', ''),\n            errorMessages: {},\n            isValid: {},\n            isinit\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.id) {\n            this.props.getIndividualItem({\n                params: { token: this.props.token },\n                url: `${Endpoint.QSPECIAL_MANAGE}/${this.props.id}`\n            });\n        }\n    }\n\n    componentWillUnmount() {\n        this.props.resetPageStore('individualItem');\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.itemData != this.props.itemData && prevState.isinit && isObject(this.props.itemData) && !isObjEmpty(this.props.itemData)) {\n            let stateD = this.intialiseState(this.props.itemData, false);\n            this.setState(stateD);\n        }\n    }\n\n    validate = (name, value) => {\n        let { isValid, errorMessages } = this.state;\n        let error = validate(name, value, { type: 'text' });\n        isValid[name] = error.isValid;\n        error.isValid\n            ? delete errorMessages[name]\n            : (errorMessages[name] = error.errorMsg);\n        this.setState({ isValid, errorMessages });\n    };\n\n    inputChange = e => {\n        let {\n            target: { name, value, checked, type }\n        } = e;\n        this.setState({ [name]: type === 'checkbox' ? checked : value }, () => {\n            this.validate(name, value);\n        });\n    };\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.validate('category', this.state.category);\n        //this.validate('image', this.state.image ? 'v' : '');\n        this.setState({ error: '' });\n        if (Object.keys(this.state.errorMessages).length === 0) {\n            this.setState({ isSaving: true });\n            let payload = Object.assign({}, this.state);\n            payload.token = this.props.token\n            delete payload.errorMessages;\n            delete payload.isValid;\n            this.props.updatePageData({\n                payload,\n                url: `${Endpoint.QSPECIAL_MANAGE}${this.props.id ? '/' + this.props.id : ''}`,\n                method: this.props.id ? \"PUT\" : 'POST',\n                action: this.props.id ? \"update\" : 'add',\n                page: 'qspecial',\n            }, (response) => {\n                if (response.status) {\n                    this.setState({ error: '', isSaving: false });\n                    this.props.toastmessage(response.message);\n                    this.props.closeModal();\n                } else {\n                    this.setState({ error: response.message, isSaving: false })\n                }\n            });\n        }\n    }\n\n    deleteItem = (e) => {\n        this.props.updatePageData({\n            payload: {},\n            params: { token: this.props.token },\n            url: `${Endpoint.QSPECIAL_MANAGE}/${this.props.id}`,\n            method: 'DELETE',\n            action: 'delete',\n            page: 'qspecial'\n        }, (response) => {\n            if (response.status) {\n                this.setState({ error: '' });\n                this.props.toastmessage(response.message);\n                this.props.closeModal();\n            } else {\n                this.setState({ error: response.message })\n            }\n        });\n    }\n    // onDrop = (a, r) => {\n    //     if (r.length || !a.length) {\n    //         return\n    //     }\n    //     let reader = new FileReader();\n    //     reader.onloadend = () => {\n    //         this.setState({ image: reader.result, isImageAdded: true });\n    //     }\n    //     reader.readAsDataURL(a[0]);\n    // }\n\n    onDrop = (files) => {\n        if (files.length) {\n            this.setState({ bulkFiles: files });\n            this.toggleUploader(true);\n        }\n    }\n\n    toggleUploader = (isUploader) => {\n        this.setState({ isUploader });\n    }\n    setBulkPhotos = (bulkCollection) => {\n        if (!bulkCollection || !bulkCollection.length) {\n            return;\n        }\n        var obj = bulkCollection[0];\n        this.setState({ image: obj.thumbnail, isUploader: false, isImageAdded: true });\n    }\n\n    render() {\n        let { bulkFiles, isUploader, image, category, errorMessages, isValid, isSaving } = this.state;\n        let { id, qsCatList } = this.props;\n        return (\n            <React.Fragment>\n                {isUploader && (\n                    <div className='editProfile mt30'>\n                        <Uploader\n                            files={bulkFiles}\n                            onComplete={this.setBulkPhotos}\n                            onBack={this.toggleUploader}\n                            folder={id ? 'user' : 'temp'}\n                            id={id ? id : this.tempId}\n                            uploadType='userImage'\n                            isSideNav={false}\n                            config={{ aspectRatio: 'p2' }}\n                            not_upload={false}\n                            isPopup={true}\n                            buttons={['r']} />\n                    </div>\n                )}\n                {!isUploader && (\n                    <div className='eventModal QspecialModal'>\n                        <p className='title-txt'>{id ? 'EDIT Q SPECIAL' : 'ADD NEW Q SPECIAL'}</p>\n                        <div className='row no-gutters'>\n                            <div className='col-4'>\n                                <Dropzone\n                                    style={{ position: 'relative' }}\n                                    accept=\"image/jpeg, image/png\"\n                                    multiple={false}\n                                    onDrop={(accepted, rejected) => { this.onDrop(accepted, rejected) }}>\n                                    <div className={'image-style upload-photo ' + (image && 'uploadtxt')} style={{ backgroundImage: `url(${image})` }}>\n                                        <img src={'./images/imagesize2_3.png'} className='w100per' alt='b' />\n                                    </div>\n                                </Dropzone>\n                                {/* {!isValid.image && <p className=\"error_msg\"> {errorMessages.image}</p>} */}\n                            </div>\n                            <div className='col-5'>\n                                <div className=\"select-casting select-catgry cursor-default\">\n                                    <InputField className=\"text-truncate text-uppercase color-white\" name=\"category\" value={category} isValid={isValid.category} errorMsg={errorMessages.category}\n                                        inputChange={this.inputChange} options={qsCatList} dom={{ placeholder: 'By category', type: 'select' }} />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='text-right mt40'>\n                            {id && <div className='btn mr10' onClick={this.deleteItem}>Delete</div>}\n                            {<div className={`btn ${isSaving ? 'btndisabled' : ''}`} onClick={this.onSubmit}>{id ? 'update' : 'save'}</div>}\n                        </div>\n                    </div>\n                )}\n            </React.Fragment>\n        );\n    }\n}\n\nfunction mapStateToProps({ auth: { token }, page: { individualItem: { data = {} }, itemLoader = false, qsCatList = {} } }) {\n    return { token, itemData: data, itemLoader, qsCatList }\n}\n\nexport default connect(mapStateToProps, { updatePageData, getIndividualItem, resetPageStore })(Qspecial);\n"],"sourceRoot":""}