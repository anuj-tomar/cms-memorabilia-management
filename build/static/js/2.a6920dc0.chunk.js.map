{"version":3,"sources":["components/modal/addonmodal.js","components/customFields/calender.js","components/reservation/reservedRoom.js"],"names":["Addonmodal","props","_this","Object","_Users_user_Desktop_workspace_quorumweb_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_user_Desktop_workspace_quorumweb_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_user_Desktop_workspace_quorumweb_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","closeModal","e","preventDefault","setState","modal","module","isOpen","updateModalData","showCustomModal","addon","scrollTo","offsetTop","arguments","length","undefined","elem","document","getElementById","scrollTop","scrollRef","state","isLoaded","body","prevProps","prevState","_this2","path","__webpack_require__","concat","then","default","catch","console","log","_this$state","Component","footer","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_7__","className","backdrop","href","onClick","reactstrap__WEBPACK_IMPORTED_MODULE_8__","id","_customFields_loader__WEBPACK_IMPORTED_MODULE_11__","assign","toastmessage","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","color","nextProps","connect","_ref","_ref$page$addonmodal","page","addonmodal","MONTH","Calendar","_Users_user_Desktop_workspace_quorumweb_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_Users_user_Desktop_workspace_quorumweb_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_user_Desktop_workspace_quorumweb_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","init","date","Date","c","setHours","m","getMonth","firstDay","getFullYear","lastDay","calender","month","dateObj","monthName","getDate","getDay","totalDay","year","currentDate","currentTimestamp","getTime","days","Array","fill","i","d","t","isCurrent","isDisabled","_Users_user_Desktop_workspace_quorumweb_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","day","timestamp","hd","_this$props","maxdate","mindate","goToMonth","isPrev","calendar","onDateSelect","dobj","react__WEBPACK_IMPORTED_MODULE_6___default","style","fontSize","paddingLeft","map","key","PureComponent","HOURS","ReservedRoom","selectDate","isinit","getList","getPageData","params","token","group","groupName","dateToStr","url","Endpoint","RESERVATION","goTo","added","setDate","disableifPast","sdate","section","list","graphData","reserveFor","groupData","forEach","g","type","resetPageStore","_this3","updatedData","_this$props$updatedDa","action","data","_this4","_this$state$graphData","_this$state$graphData2","rtype","_this$state$graphData3","rooms","_this$state$graphData4","Fragment","_modal_addonmodal__WEBPACK_IMPORTED_MODULE_8__","_customFields_calender__WEBPACK_IMPORTED_MODULE_9__","_customFields_loader__WEBPACK_IMPORTED_MODULE_14__","maxHeight","totalH","minHeight","h","height","slots","_modal_button__WEBPACK_IMPORTED_MODULE_7__","disabled","background","parseInt","rTypeId","room","bookingId","title","isEmpty","st","et","formatReservationData","auth","_ref$page","_ref$page$pageData","pageData","_ref$page$pageData$da","_ref$page$pageData$co","count","_ref$page$updatedData","_ref$page$isLoader","isLoader"],"mappings":"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","file":"static/js/2.a6920dc0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Loader from '../customFields/loader';\nimport { updateModalData } from '../../actions/page';\nclass Addonmodal extends Component {\n  constructor(props) {\n    super(props);\n    this.scrollRef = null;\n    this.state = { modal: null, module: null, isLoaded: false, isOpen: false, body: '' };\n  }\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.modal !== prevState.modal) {\n      return { modal: nextProps.modal };\n    } else return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.modal !== this.props.modal) {\n      let { modal } = this.props;\n      this.setState({ isOpen: modal.showCustomModal });\n      if (modal.path) {\n        import(`../${modal.path}`)\n          .then(module =>\n            this.setState({ module: module.default, isLoaded: true, body: '' })\n          )\n          .catch(e => {\n            console.log(e);\n          });\n      }else if(modal.body){\n        this.setState({ body: modal.body, module: '', isLoaded: true })\n      }\n    }\n  }\n\n  closeModal = (e) => {\n    if(e) e.preventDefault();\n    this.setState({\n      modal: null,\n      module: null,\n      //isLoaded: false,\n      isOpen: false\n    });\n    this.props.updateModalData({ showCustomModal: false, addon: true });\n  };\n\n  scrollTo = (offsetTop = 0) => {\n    let elem = document.getElementById('scrollRef');\n    elem.scrollTop = elem.scrollTop + offsetTop;\n  };\n\n  render() {\n    const { module: Component, modal, isLoaded, body } = this.state;\n    const { footer } = this.props;\n    return (\n      <Modal\n        isOpen={modal.showCustomModal}\n        className={modal.className}\n        backdrop=\"static\"\n      >\n        <div>\n          <a href=\"#\" className=\"btn-close pa\" onClick={this.closeModal}>\n              <span className=\"pclose\">+</span>\n          </a>\n        </div>\n        <ModalBody id=\"scrollRef\">\n          {!isLoaded && <Loader />}\n          {isLoaded && Component && (\n            <Component\n              {...modal}\n              closeModal={this.closeModal}\n              toastmessage={this.props.toastmessage}\n              scrollTo={this.scrollTo}\n            />\n          )}\n          {isLoaded && body && (\n             body \n          )}\n        </ModalBody>\n        { footer && <ModalFooter>\n          <Button color=\"secondary\" onClick={this.closeModal}>\n            Cancel\n          </Button>\n        </ModalFooter>\n        }\n      </Modal>\n    );\n  }\n}\nfunction mapStateToProps({\n  page: { addonmodal = { showCustomModal: false } }\n}) {\n  return {\n    modal: addonmodal\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { updateModalData }\n)(Addonmodal);\n","import React, { PureComponent } from 'react';\n\nimport '../../style/calender.scss';\nconst MONTH = [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\n\"August\",\"September\",\"October\",\"November\",\"December\"]\nclass Calendar extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            calendar: this.init()\n        };\n    }\n\n    init = (date = null) =>{\n        date = date ? date : new Date();\n        let c = new Date();\n        c.setHours(0,0,0,0);\n        let m = date.getMonth();\n        var firstDay =  new Date(date.getFullYear(), date.getMonth(), 1); \n        var lastDay =   new Date(date.getFullYear(), date.getMonth() + 1, 0); \n        let calender = {\n            month: m,\n            dateObj: date,\n            monthName: MONTH[m],\n            date: date.getDate(),\n            firstDay: firstDay.getDay(),\n            totalDay: lastDay.getDate(),\n            year: date.getFullYear(),\n            currentDate: c,\n            currentTimestamp: c.getTime(),\n        };\n        let days = [];\n        if(calender.firstDay > 0){\n             days = new Array(calender.firstDay).fill(null);\n        }\n        for(var i = 1; i<= calender.totalDay; i++){\n            i =  i > 9 ? i : `0${i}`;\n            let d = new Date(calender.year, calender.month, i, 0,0,0,0);\n            let t = d.getTime();\n            let isCurrent =  calender.currentTimestamp === t;\n            let isDisabled = this.isDisabled(t);\n            let className  = isCurrent ? 'active' : '';\n            className = isDisabled ? className + ' disable' : className;\n            days = [...days, { day: i, isCurrent, timestamp: t, date: d, hd: `${i}/${calender.month}/${calender.year}`, isDisabled, className } ];\n        }\n        calender.days = days;\n        return calender;\n    }\n\n    isDisabled = (date) =>{\n        let {maxdate, mindate} = this.props;\n        if(maxdate){\n            maxdate.setHours(0,0,0,0);\n            return maxdate.getTime() < date;\n        }\n        if(mindate){\n            mindate.setHours(0,0,0,0);\n            return mindate.getTime() > date;\n        }\n        return false\n    }\n\n    goToMonth = (e, isPrev)=>{\n        let calendar = Object.assign({},this.state.calendar);\n        calendar.month = isPrev ? calendar.month - 1 : calendar.month + 1;\n        if(calendar.month < 0){\n            calendar.month = 11;\n            calendar.year = calendar.year - 1;\n        }\n\n        if(calendar.month > 11){\n            calendar.month = 0;\n            calendar.year = calendar.year + 1;\n        } \n        let date = new Date(`${calendar.year}-${calendar.month + 1}-01`);\n         this.setState({calendar: this.init(date)})\n\n    }\n\n    onDateSelect = (dobj) => {\n        if(dobj.isDisabled){\n            return;\n        }\n        if(this.props.onDateSelect){\n            this.props.onDateSelect(dobj);\n        }\n    }\n\n    render() {\n        let { calendar } = this.state;\n        return (\n            <div className=\"calendar\">\n                <div className=\"month\">\n                    <ul>\n                    <li className=\"prev\" onClick={(e)=>this.goToMonth(e, true)}>&#10094;</li>\n                    <li className=\"next\" onClick={(e)=>this.goToMonth(e, false)}>&#10095;</li>\n                        <li>\n                            {calendar.monthName}\n                            <span style={{ fontSize: \"20px\", paddingLeft: '10px' }}>{calendar.year}</span>\n                        </li>\n                    </ul>\n                </div>\n\n                <ul className=\"weekdays\">\n                    <li>S</li>\n                    <li>M</li>\n                    <li>T</li>\n                    <li>W</li>\n                    <li>T</li>\n                    <li>F</li>\n                    <li>S</li>\n                </ul>\n\n                <ul className=\"days\">\n                    {calendar.days.map((day, i)=>{\n                        return(\n                        <li key={i}>{day && <span className={day.className } onClick={(e)=>this.onDateSelect(day)}>{day.day}</span>}</li>\n                        )\n                    })}\n                </ul>\n            </div>\n        );\n    }\n}\nexport default Calendar\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport ModalButton from '../modal/button';\nimport Addonmodal from '../modal/addonmodal';\nimport Calendar from '../customFields/calender';\nimport { getPageData, resetPageStore } from '../../actions/page';\nimport { Endpoint } from '../../utils/constants';\nimport { dateToStr } from '../../utils/formatter'\nimport { formatReservationData } from '../../sagas/hooks';\nimport Loader from '../customFields/loader';\n\n//const HOURS = [\"00\", \"02\", \"04\", \"06\", \"08\", \"10\", \"12\", \"14\", \"16\", \"18\", \"20\", \"22\", \"24\"];\nconst HOURS = [\"08\", \"10\", \"12\", \"14\", \"16\", \"18\", \"20\", \"22\", \"24\"];\nconst Height = 30;\nconst totalH = 16;\nclass ReservedRoom extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            section: 'calendar',\n            date: {},\n            currentDate: '',\n            timestamp: null,\n            isinit: true,\n            list: [],\n            graphData: {},\n            reserveFor: '',\n        };\n    }\n\n    componentDidMount() {\n        let reserveFor = '';\n        if (this.props.groupData && this.props.groupData.length) {\n            this.props.groupData.forEach((g, i) => {\n                reserveFor += `${g.type}${i == this.props.groupData.length - 1 ? '' : ', '}`\n            });\n            this.setState({ reserveFor });\n        }\n    }\n\n    selectDate = (date) => {\n        this.setState({ date, isinit: true, currentDate: date.date }, () => {\n            this.getList();\n        });\n    }\n\n    componentWillUnmount() {\n        this.props.resetPageStore('pageData');\n    }\n\n    getList = () => {\n        this.props.getPageData({\n            params: { token: this.props.token, group: this.props.groupName, date: dateToStr(this.state.currentDate, 'YYYY-MM-DD') },\n            url: Endpoint.RESERVATION\n        })\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (nextProps.list != prevState.list && prevState.isinit && nextProps.list.length) {\n            let graphData = formatReservationData(nextProps.list, Height, totalH);\n            return { list: nextProps.list, isinit: false, graphData, section: 'slot' }\n        }\n        return null\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.updatedData != prevProps.updatedData && this.props.updatedData && this.props.updatedData.page == 'reserve') {\n            let { action, data } = this.props.updatedData;\n            if (action == 'update' || action == 'add' || action == 'delete') {\n                this.setState({ isinit: true }, () => {\n                    this.getList();\n                });\n            }\n            this.props.resetPageStore('updatedData')\n        }\n    }\n\n    goTo = (e, isPrev)=> {\n        e.preventDefault();\n        let added = isPrev ? -1 : 1;\n        let currentDate = this.state.currentDate;\n        currentDate.setDate(currentDate.getDate() - (added));\n        this.setState({currentDate, isinit: true}, ()=>{\n            this.getList();\n        })\n    }\n\n    disableifPast=(sdate)=>{\n        sdate.setHours(0,0,0,0);\n        let d = new Date();\n        d.setHours(0,0,0,0);\n        return d.getTime() > sdate.getTime();\n    }\n\n    render() {\n        let { section, date, currentDate, isinit, graphData: { rtype = [], rooms = {}, graphData = {} }, reserveFor } = this.state;\n        return (\n            <div className='reservedRoom'>\n                {section == 'slot' && <React.Fragment>\n                <span onClick={(e)=>this.goTo(e, false)}><i className=\"fa fa-angle-left\"></i></span>\n                <span onClick={(e)=>this.goTo(e, true)}><i className=\"fa fa-angle-right\"></i></span>\n               </React.Fragment> }\n                <div className='d-flex justify-content-between'>\n                    <div className='_title room-title'>RESERVE {reserveFor}</div>\n                </div>\n                <Addonmodal toastmessage={this.props.toastmessage} />\n                {section == 'calendar' && <Calendar onDateSelect={this.selectDate} mindate={new Date()} />}\n\n                {section == 'slot' &&\n\n                    <div className='text-center'>\n                        {isinit && <Loader />}\n                        {!isinit && rtype.length > 0 &&\n                                <div className='bookingContainer'>\n                                    <p className='txt-date'>{dateToStr(currentDate, \"dddd, Do[,] MMMM YYYY\")}</p>\n                                    <div className='row no-gutters mb5'>\n                                        <div className='col-2'></div>\n                                        {rtype.map(id => {\n                                            return (\n                                                <div className='col' key={'room_' + id}>\n                                                    <p className='room-name'>{rooms[id]}</p>\n                                                </div>\n                                            );\n                                        })}\n                                    </div>\n                                    <div className='row no-gutters'>\n                                        <div className='col-2'>\n                                        <div  style={{maxHeight: `${totalH * Height}px`, minHeight: '100%'}}>\n                                            {\n                                                HOURS.map((h, i) => {\n                                                    return (<div style={{ height: `${ i == HOURS.length-1 ? 0 : (Height -1) * 2}px` }} key={h}>\n                                                        <p className='txt-time'> {h}</p>\n                                                    </div>);\n                                                })\n                                            }\n                                        </div>\n                                        </div>\n                                        {rtype.map(id => {\n                                            return (\n                                                <div className='col' key={id + '_bookins'}>\n                                                    <div className='room-space' style={{maxHeight: `${totalH * Height}px`, minHeight: '100%'}}>\n                                                        {graphData[id].map((slots, i) => {\n                                                            return (<ModalButton\n                                                                key={i}\n                                                                className='blank-space p'\n                                                                disabled={this.disableifPast(currentDate)}\n                                                                style={{ background: slots.color, height: `${parseInt(slots.height)}px` }}\n                                                                data={{\n                                                                    showCustomModal: true,\n                                                                    addon: true,\n                                                                    rTypeId: id,\n                                                                    room: rooms[id],\n                                                                    date: currentDate,\n                                                                    bookingId: slots.id,\n                                                                    title: '',\n                                                                    path: 'reservation/reserve',\n                                                                    body: '',\n                                                                    className: 'modal-large'\n                                                                }}\n                                                            >\n                                                                <div className='d-flex flex-column justify-content-between h100per'>\n                                                                    {!slots.isEmpty &&\n                                                                        [<p className='bookedtime' key=\"st\">{slots.st}</p>,\n                                                                        <p className='bookedtime' key=\"et\">{slots.et}</p>]\n                                                                    }\n                                                                </div>\n                                                            </ModalButton>\n                                                            )\n                                                        })}\n                                                    </div>\n                                                </div>\n                                            );\n                                        })}\n                                    </div>\n                                </div>\n                        }\n                    </div>\n                }\n            </div>\n        );\n    }\n}\nfunction mapStateToProps({ auth: { token }, page: { pageData: { data = [], count = 0 }, updatedData = {}, isLoader = false } }) {\n    return { token, isLoader, list: data, count, updatedData }\n}\nexport default connect(mapStateToProps, { getPageData, resetPageStore })(ReservedRoom);\n"],"sourceRoot":""}