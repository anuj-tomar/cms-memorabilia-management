{"version":3,"sources":["components/modal/addonmodal.js","components/customFields/uploader.js"],"names":["Addonmodal","props","_this","Object","_Users_user_Desktop_workspace_quorumweb_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_user_Desktop_workspace_quorumweb_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_user_Desktop_workspace_quorumweb_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","closeModal","e","preventDefault","setState","modal","module","isOpen","updateModalData","showCustomModal","addon","scrollTo","offsetTop","arguments","length","undefined","elem","document","getElementById","scrollTop","scrollRef","state","isLoaded","body","prevProps","prevState","_this2","path","__webpack_require__","concat","then","default","catch","console","log","_this$state","Component","footer","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_7__","className","backdrop","href","onClick","reactstrap__WEBPACK_IMPORTED_MODULE_8__","id","_customFields_loader__WEBPACK_IMPORTED_MODULE_11__","assign","toastmessage","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","color","nextProps","connect","_ref","_ref$page$addonmodal","page","addonmodal","mapAspectRatio","l","p","s","l2","p2","Uploader","_Users_user_Desktop_workspace_quorumweb_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_Users_user_Desktop_workspace_quorumweb_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_user_Desktop_workspace_quorumweb_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","cropperRef","React","createRef","onDrop","bind","_Users_user_Desktop_workspace_quorumweb_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","onSelect","RotateR","cropImage","zoomImage","genrateCroppedUrl","backToOrigin","removeImage","onCrop","setAspectRatio","changeAspectRatio","toggleAlert","setCropboxMinSize","freeCropping","setTags","r","list","selected","selectedName","selectedIndex","selectedType","iType","sType","selectedP","tags","tagsError","isSaving","isActive","alertMsg","buttons","minCropBoxWidth","IMAGE_BOX_SIZE","minCropBoxHeight","aspectRatio","initialAlert","autoCropArea","isTag","config","files","i","file","URL","revokeObjectURL","preview","event","target","value","cHeight","Math","floor","detail","height","cwidth","width","minCropBoxSize","current","setCropBoxData","heigth","h","w","iwidth","top","left","iHeight","NaN","url","image","Image","src","onload","fileObj","index","_this3","clear","isReturn","thumbnail","fileName","getImageSize","fileType","getFileExtension","replace","reader","FileReader","result","onloadend","name","type","readAsDataURL","_this4","setTimeout","rotate","cType","cData","getData","timeout","_this5","crop","flag","containerData","getContainerData","imageData","getImageData","currentZoomlevel","naturalWidth","zoomTo","x","y","_this6","map","imgId","createObjectURL","folder","folderId","tgas","progressList","filter","_idx","data","status","_this7","fileList","croppedSize","imageUrl","imageName","uniqueCode","tempId","checkIfFilesInProgress","_this8","payload","getCroppedCanvas","toDataURL","uploadType","token","section","not_upload","nIndex","click","fetchService","method","apiurl","Endpoint","UPLOAD","response","successCallBack","_this10","imagestyle","backgroundImage","react__WEBPACK_IMPORTED_MODULE_7___default","key","style","alt","aria-hidden","title","newList","onComplete","onBack","checkIfMobile","_React$createElement","_this11","_this$props","_this$props$isSideNav","isSideNav","_this$props$isBackBot","isBackBotton","_this$props$isMultipl","isMultiple","isPopup","settings","focusOnSelect","dots","infinite","speed","slidesToShow","showNoOfImage","slidesToScroll","vertical","verticalSwiping","arrows","react_dropzone__WEBPACK_IMPORTED_MODULE_9__","multiple","accept","accepted","rejected","react_slick__WEBPACK_IMPORTED_MODULE_11___default","renderFileList","react_cropper__WEBPACK_IMPORTED_MODULE_10___default","ref","dragMode","viewMode","strict","responsive","restore","background","autoCrop","guides","movable","zoomable","zoomOnTouch","zoomOnWheel","center","highlight","toggleDragModeOnDblclick","minContainerWidth","minContainerHeight","ready","indexOf","placeholder","_Users_user_Desktop_workspace_quorumweb_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","_modal_addonmodal__WEBPACK_IMPORTED_MODULE_16__","auth"],"mappings":"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","file":"static/js/1.b9085b39.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Loader from '../customFields/loader';\nimport { updateModalData } from '../../actions/page';\nclass Addonmodal extends Component {\n  constructor(props) {\n    super(props);\n    this.scrollRef = null;\n    this.state = { modal: null, module: null, isLoaded: false, isOpen: false, body: '' };\n  }\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.modal !== prevState.modal) {\n      return { modal: nextProps.modal };\n    } else return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.modal !== this.props.modal) {\n      let { modal } = this.props;\n      this.setState({ isOpen: modal.showCustomModal });\n      if (modal.path) {\n        import(`../${modal.path}`)\n          .then(module =>\n            this.setState({ module: module.default, isLoaded: true, body: '' })\n          )\n          .catch(e => {\n            console.log(e);\n          });\n      }else if(modal.body){\n        this.setState({ body: modal.body, module: '', isLoaded: true })\n      }\n    }\n  }\n\n  closeModal = (e) => {\n    if(e) e.preventDefault();\n    this.setState({\n      modal: null,\n      module: null,\n      //isLoaded: false,\n      isOpen: false\n    });\n    this.props.updateModalData({ showCustomModal: false, addon: true });\n  };\n\n  scrollTo = (offsetTop = 0) => {\n    let elem = document.getElementById('scrollRef');\n    elem.scrollTop = elem.scrollTop + offsetTop;\n  };\n\n  render() {\n    const { module: Component, modal, isLoaded, body } = this.state;\n    const { footer } = this.props;\n    return (\n      <Modal\n        isOpen={modal.showCustomModal}\n        className={modal.className}\n        backdrop=\"static\"\n      >\n        <div>\n          <a href=\"#\" className=\"btn-close pa\" onClick={this.closeModal}>\n              <span className=\"pclose\">+</span>\n          </a>\n        </div>\n        <ModalBody id=\"scrollRef\">\n          {!isLoaded && <Loader />}\n          {isLoaded && Component && (\n            <Component\n              {...modal}\n              closeModal={this.closeModal}\n              toastmessage={this.props.toastmessage}\n              scrollTo={this.scrollTo}\n            />\n          )}\n          {isLoaded && body && (\n             body \n          )}\n        </ModalBody>\n        { footer && <ModalFooter>\n          <Button color=\"secondary\" onClick={this.closeModal}>\n            Cancel\n          </Button>\n        </ModalFooter>\n        }\n      </Modal>\n    );\n  }\n}\nfunction mapStateToProps({\n  page: { addonmodal = { showCustomModal: false } }\n}) {\n  return {\n    modal: addonmodal\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { updateModalData }\n)(Addonmodal);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\n\nimport Dropzone from 'react-dropzone';\nimport Cropper from 'react-cropper';\nimport Slider from 'react-slick';\nimport '../../style/photoUploader.scss';\n\nimport { getFileExtension } from '../../utils';\nimport { checkIfMobile, IMAGE_BOX_SIZE, Endpoint } from '../../utils/constants';\nimport { updateModalData } from '../../actions/page';\nimport { fetchService } from '../../utils/index';\nimport Addonmodal from '../modal/addonmodal';\n\n\nconst mapAspectRatio = { l: 16 / 9, p: 3 / 4, s: 1, l2: 4 / 3, p2: 3 / 4 }\n\nclass Uploader extends Component {\n\n    constructor(props) {\n        super(props);\n        this.cropperRef = React.createRef();\n        this.onDrop = this.onDrop.bind(this);\n        this.onSelect = this.onSelect.bind(this);\n        this.RotateR = this.RotateR.bind(this);\n        this.cropImage = this.cropImage.bind(this);\n        this.zoomImage = this.zoomImage.bind(this);\n        this.genrateCroppedUrl = this.genrateCroppedUrl.bind(this);\n        this.backToOrigin = this.backToOrigin.bind(this);\n        this.removeImage = this.removeImage.bind(this);\n        this.onCrop = this.onCrop.bind(this);\n        this.setAspectRatio = this.setAspectRatio.bind(this);\n        this.changeAspectRatio = this.changeAspectRatio.bind(this);\n        this.toggleAlert = this.toggleAlert.bind(this);\n        this.setCropboxMinSize = this.setCropboxMinSize.bind(this);\n        this.freeCropping = this.freeCropping.bind(this);\n        this.setTags = this.setTags.bind(this);\n        this.state = {\n            r: 0,\n            list: [],\n            selected: null,\n            selectedName: null,\n            selectedIndex: '',\n            selectedType: '',\n            iType: '',\n            sType: '',\n            selectedP: {},\n            tags: '',\n            tagsError: false,\n            isSaving: false,\n            isActive: '',\n            alertMsg: 'Uploading in progress.',\n            buttons: ['l', 'p', 's', 'r', 'f'],\n            minCropBoxWidth: IMAGE_BOX_SIZE['common']['w'],\n            minCropBoxHeight: IMAGE_BOX_SIZE['common']['h'],\n            aspectRatio: 16 / 9,\n            initialAlert: 0,\n            autoCropArea: 0,\n            isTag: props.config && props.config.isTag ? props.config.isTag : false\n        }\n    };\n\n    componentDidMount() {\n        //$('body').addClass('uploaderLayout');\n        const { buttons } = this.props;\n        this.setState({ buttons: buttons && buttons.length ? buttons : this.state.buttons, autoCropArea: this.props.autoCropArea ? this.props.autoCropArea : 0 });\n        this.onDrop(this.props.files);\n    };\n\n    componentWillUnmount() {\n        const { list } = this.state;\n        for (let i = list.length; i >= 0; i--) {\n            const file = list[0];\n            if (file) {\n                URL.revokeObjectURL(file.preview);\n            }\n        }\n        //$('body').removeClass('uploaderLayout');\n    };\n\n    //componentDidMount() {\n    //var self = this;\n    // history.pushState(null, null, location.href);\n    // window.onpopstate = function () {\n    //     // history.go(0);\n    //     self.props.onBack();\n    // };\n    //}\n\n    setTags(event) {\n        this.setState({ tags: event.target.value, tagsError: !event.target.value ? true : false });\n    }\n\n    onCrop(e) {\n        if (e) {\n            let selectedP = this.state.selectedP;\n            selectedP.cHeight = Math.floor(e.detail.height);\n            selectedP.cwidth = Math.floor(e.detail.width);\n            this.setState({ selectedP });\n        }\n    }\n\n    setCropboxMinSize(iType) {\n        let { config } = this.props, minCropBoxWidth, minCropBoxHeight;\n        minCropBoxWidth = config && config.minCropBoxSize && config.minCropBoxSize[iType] && config.minCropBoxSize[iType]['w'] ?\n            config.minCropBoxSize[iType]['w'] : this.state.minCropBoxWidth;\n        minCropBoxHeight = config && config.minCropBoxSize && config.minCropBoxSize[iType] && config.minCropBoxSize[iType]['h'] ?\n            config.minCropBoxSize[iType]['h'] : this.state.minCropBoxHeight;\n        this.cropperRef.current.setCropBoxData({ width: minCropBoxWidth, heigth: minCropBoxHeight });\n    }\n\n    setAspectRatio(h, w) {\n        let iType = 'l', sType;\n        if (h > w) {\n            iType = 'p';\n        } else if (h < w) {\n            iType = 'l';\n        } else if (h === w) {\n            iType = 's';\n        }\n        let aspectRatio = mapAspectRatio[iType];\n\n        this.setCropboxMinSize(iType);\n        this.setState({ iType, sType, isActive: iType })\n        this.cropperRef.current.setAspectRatio(aspectRatio);\n    }\n\n    changeAspectRatio(iType) {\n        if (!iType) { return; }\n        this.setState({ isActive: iType });\n        this.setCropboxMinSize(iType);\n        this.cropperRef.current.setAspectRatio(mapAspectRatio[iType]);\n    }\n    freeCropping() {\n        this.setState({ isActive: 'f' });\n        this.cropperRef.current.setCropBoxData({\n            width: this.state.selectedP.iwidth + 'px', top: '0px', left: '0px',\n            heigth: this.state.selectedP.iHeight + 'px'\n        });\n        this.cropperRef.current.setAspectRatio(NaN);\n    }\n\n    getImageSize(url) {\n        if (!url) {\n            return;\n        }\n        let image = new Image;\n        image.src = url;\n        image.onload = () => {\n            let selectedP = this.state.selectedP;\n            selectedP.iHeight = image.height;\n            selectedP.iwidth = image.width;\n\n            if (this.props.config && this.props.config.aspectRatio) {\n                this.changeAspectRatio(this.props.config.aspectRatio);\n            } else {\n                this.setAspectRatio(selectedP.iHeight, selectedP.iwidth);\n            }\n            this.setState({ selectedP });\n        }\n    }\n\n\n\n    onSelect(fileObj, index) {\n        if (this.state.selectedIndex === index) return;\n        if (this.cropperRef.current) this.cropperRef.current.clear();\n        this.setState({ r: 0 })\n        let file, selectedName, isReturn = false;\n        if (fileObj.thumbnail) {\n            file = fileObj.thumbnail;\n            selectedName = fileObj.fileName;\n            isReturn = true;\n        } else if (fileObj.file && fileObj.file.thumbnail) {\n            file = fileObj.file.thumbnail;\n            selectedName = fileObj.file.fileName;\n            isReturn = true;\n        }\n        if (isReturn) {\n            this.getImageSize(file);\n            let fileType = getFileExtension(file);\n            fileType = fileType == 'jpg' ? 'jpeg' : fileType;\n            this.setState({ selected: file, selectedName, selectedType: 'image/' + fileType, selectedIndex: index, tags: fileObj.tags || '', tagsError: false, isSaving: false }, () => {\n                this.cropperRef.current.replace(file);\n                //this.cropImage(200);\n            });\n            return;\n        }\n        let reader = new FileReader();\n        file = fileObj.file;\n        reader.onload = () => {\n            this.getImageSize(reader.result);\n        }\n        reader.onloadend = () => {\n            this.setState({ selected: reader.result, selectedName: file.name, selectedType: file.type, selectedIndex: index, tags: '', tagsError: false, isSaving: false }, () => {\n                this.cropperRef.current.replace(reader.result);\n                // this.cropImage();\n            });\n        }\n        reader.readAsDataURL(file);\n    }\n\n    RotateR() {\n        this.cropperRef.current.clear();\n        this.cropperRef.current.replace(this.state.selected);\n\n        let r = this.state.r + 90;\n        this.setState({ r: r == 360 ? 0 : r })\n        setTimeout(() => {\n            this.cropperRef.current.rotate(r);\n\n            let cType, cData = this.cropperRef.current.getData();\n            if (cData.rotate === 90 || cData.rotate === 270) {\n                cType = this.state.iType == 'l' ? 'p' : this.state.iType == 'p' ? 'l' : this.state.iType;\n            } else {\n                cType = this.state.iType;\n            }\n            this.changeAspectRatio(cType);\n            //this.cropImage(0);\n        }, 100);\n    }\n\n    cropImage(timeout) {\n        timeout = !timeout ? 0 : timeout;\n        setTimeout(() => {\n            this.cropperRef.current.crop();\n        }, 100);\n    }\n    zoomImage(flag) {\n        const containerData = this.cropperRef.current.getContainerData();\n        const imageData = this.cropperRef.current.getImageData();\n        let currentZoomlevel = imageData.width / imageData.naturalWidth;\n        if ((flag && currentZoomlevel >= 1.5) || (!flag && currentZoomlevel <= 1)) {\n            return;\n        }\n        currentZoomlevel = flag ? currentZoomlevel + 0.1 : currentZoomlevel - 0.1;\n        // Zoom to 50% from the center of the container.\n        this.cropperRef.current.zoomTo(currentZoomlevel, {\n            x: containerData.width / 2,\n            y: containerData.height / 2,\n        });\n        //this.cropperRef.current.zoom(0.1);\n    }\n\n    onDrop(files) {\n        if (files && files.length) {\n            let list = files.map((file, i) => {\n                let fObj = {\n                    imgId: i,\n                    type: 'queue',\n                    file: file,\n                    preview: !file.thumbnail && !file.file ? URL.createObjectURL(file) : '',\n                    fileName: file.name,\n                    fileType: file.type,\n                    tags: file.tags || ''\n                };\n                return fObj;\n            });\n            this.setState({ list: this.state.list.concat(list), folder: this.props.folder || 'profile', folderId: this.props.id || '', tgas: list[0].tags }, () => {\n                this.onSelect(list[0], 0);\n            });\n        }\n    }\n\n    checkIfFilesInProgress() {\n        let progressList = this.state.list.filter((s, _idx) => s.type === 'saving');\n        return (progressList && progressList.length > 0)\n    }\n\n    successCallBack(data, status) {\n        let fileList = this.state.list.map((file, i) => {\n            data = data || {};\n            data.imgId = data.imgId || 0;\n            if ((data.imgId || data.imgId === 0) && i != data.imgId) {\n                return file;\n            } else {\n                if (!status) {\n                    file.type = 'error';\n                    return file;\n                }\n                file.croppedSize = this.state.selectedP;\n                file.thumbnail = data.imageUrl;\n                file.fileName = data.imageName;\n                file.uniqueCode = data.uniqueCode;\n                file.type = 'selected';\n                file.tags = this.state.tags;\n                file.tempId = data.tempId;\n                if (!this.state.folderId) { this.setState({ folderId: data.tempId }) }\n                return file;\n            }\n        });\n        this.setState({ list: fileList }, () => {\n            if (this.state.selectedIndex + 1 >= this.state.list.length && this.state.isSaving) {\n                if (this.checkIfFilesInProgress()) {\n                    // if(this.state.initialAlert === 0){\n                    //     this.setState({ initialAlert: 1 });\n                    //     this.toggleAlert(true);\n                    // }\n                    return;\n                }\n                this.backToOrigin();\n            }\n        });\n\n    }\n\n    genrateCroppedUrl() {\n        const payload = {\n            imageName: this.state.selectedName,\n            image: this.cropperRef.current.getCroppedCanvas().toDataURL(this.state.selectedType, 0.8),\n            imgId: this.state.selectedIndex,\n            uploadType: this.props.uploadType,\n            token: this.props.token\n        }\n        if (this.state.folder) {\n            payload.id = this.state.folderId || '';\n            payload.section = this.state.folder;\n        }\n        let fileList = this.state.list.map((file, i) => {\n            if (i != this.state.selectedIndex) {\n                return file;\n            } else {\n                file.type = this.props.not_upload ? 'selected' : 'saving'\n                file.thumbnail = this.cropperRef.current.getCroppedCanvas().toDataURL(this.state.selectedType, 0.8);\n                return file;\n            }\n        });\n        if (this.state.selectedIndex + 1 >= this.state.list.length) this.setState({ isSaving: true })\n        this.setState({ tagsError: false, list: fileList }, () => {\n            if (this.state.selectedIndex + 1 >= this.state.list.length) {\n                if (this.props.not_upload) this.backToOrigin();\n                return;\n            }\n            let nIndex = this.state.selectedIndex + 1;\n            let thumb = document.getElementById('thumb-' + nIndex)\n            thumb.click();\n            //this.onSelect(this.state.list[nIndex], nIndex);\n        });\n        if (this.props.not_upload) return;\n        fetchService({\n            payload: payload,\n            method: 'POST',\n            url: `${this.props.apiurl ? this.props.apiurl : Endpoint.UPLOAD}`,\n        }).then((data) => {\n            let response = data && data.response ? data.response : {};\n            this.successCallBack(response.data, response.status);\n        });\n    }\n\n    removeImage(e, index) {\n        return;\n        if (e) {\n            e.preventDefault();\n            this.setState({ list: this.state.list.filter((s, _idx) => _idx !== index) }, () => {\n                if (!this.state.list.length) {\n                    this.setState({ selected: null, selectedName: null, selectedIndex: 0, tags: '', tagsError: false });\n                }\n            });\n        }\n    }\n\n    renderFileList() {\n        let list = this.state.list.map((file, i) => {\n            let thumb = file.thumbnail ? file.thumbnail : file.file.thumbnail ? file.file.thumbnail : file.preview ? file.preview : '';\n            const imagestyle = {\n                backgroundImage: 'url(' + (thumb) + ')'\n            };\n            return (\n                <div key={'_uploader_' + i}>\n                    <div className={`img-thumb  ${file.type == 'saving' ? 'isSaving' : ''} ${this.state.selectedIndex == i ? 'active' : ''}`} key={i}>\n                        <div onClick={(e) => this.onSelect(file, i)} id={`thumb-${i}`}>\n                            <div style={imagestyle} className=\"image-style\">\n                                <img src={'./images/imagesize16_9.png'} className=\"w100per\" alt=\"\" />\n                            </div>\n                        </div>\n                        <p className=\"icon-fot m0\">\n                            {file.type == 'selected' &&\n                                <i className=\"fa fa-check-circle\" aria-hidden=\"true\"></i>\n                            }\n                            {file.type == 'queue' &&\n                                <i className=\"fa fa-times-circle\" aria-hidden=\"true\" onClick={(e) => this.removeImage(e, i)}></i>\n                            }\n                            {file.type == 'error' &&\n                                <i className=\"fa fa-times-circle red\" aria-hidden=\"true\" >error</i>\n                            }\n                        </p>\n\n                    </div>\n                </div>\n            )\n        });\n        return list;\n    }\n\n    toggleAlert(flag) {\n        // if(this.props.not_upload){\n        //     return;\n        // }\n        flag = flag || false;\n        this.props.updateModalData({\n            addon: true,\n            showCustomModal: flag,\n            title: '',\n            footer: true,\n            path: '',\n            body: this.state.alertMsg,\n            className: ''\n        });\n        this.setState({ initialAlert: flag ? 1 : 0 });\n    }\n\n    backToOrigin(e) {\n        if (!this.props.not_upload && this.checkIfFilesInProgress()) {\n            this.toggleAlert(true);\n            return;\n        }\n        if (e) e.preventDefault();\n        this.toggleAlert();\n        let newList = this.state.list.filter((s, _idx) => s.type === 'selected');\n        this.props.onComplete(newList, this.state.folderId, this.props.uploadType);\n        this.props.onBack(false);\n    }\n\n    showNoOfImage() {\n        let item;\n        if (checkIfMobile()) {\n            item = this.state.list.length < 2 ? 1 : 2;\n        } else {\n            item = this.state.list.length < 4 ? this.state.list.length : 4;\n        }\n        return item\n    }\n\n    render() {\n        const { list, selected, aspectRatio, selectedP, minCropBoxWidth, minCropBoxHeight, isTag, autoCropArea } = this.state;\n        const { isSideNav = true, isBackBotton = true, isMultiple = false, isPopup } = this.props;\n        var settings = {\n            focusOnSelect: true,\n            dots: false,\n            infinite: true,\n            speed: 500,\n            slidesToShow: this.showNoOfImage(),\n            slidesToScroll: 1,\n            vertical: !checkIfMobile(),\n            verticalSwiping: !checkIfMobile(),\n            arrows: true,\n            // nextArrow: <SampleNextArrow />,\n            // prevArrow: <SamplePrevArrow />,\n        };\n\n        return (\n            <div className=\"container uploader\">\n                <div className=\"photoUploader\">\n                    {isBackBotton &&\n                        <div className=\"title_photouploader d-flex align-items-center justify-content-between\">\n                            <span className=\"txt-kalakalphoto\">PHOTO UPLOADER</span>\n                            {!isPopup &&\n                                 <a href=\"javascript:void(0)\" onClick={this.backToOrigin} className=\"btn-close\">\n                                    <span className=\"pclose\" >+</span>\n                                </a>\n                            }\n                        </div>\n                    }\n                    {!list.length &&\n                        <Dropzone className=\"style-upload\"\n                            multiple={isMultiple}\n                            accept=\"image/jpeg, image/png\"\n                            onDrop={(accepted, rejected) => { this.onDrop(accepted) }}>\n                            <p id=\"file\" className=\"icon-plus\">+</p>\n                            <p className=\"txt-fot\">CLICK TO UPLOAD</p>\n                        </Dropzone>\n                    }\n                    <div className={`loader-wrapper d-flex ${!isSideNav ? 'justify-content-center' : ''}`}>\n                        {isSideNav && list.length > 0 &&\n                            <div className=\"img-thumb-panel\">\n                                <a href=\"javascript:void(0)\" className=\"toparrow\" />\n                                <a href=\"javascript:void(0)\" className=\"downarrow\" />\n                                <div className=\"scrollouter\">\n                                    <Slider {...settings}>{this.renderFileList()}</Slider></div>\n                            </div>\n                        }\n                        {selected &&\n                            <div>\n                                <span className=\"uploadtxt\"><b>UPLOADED SIZE-</b> {selectedP.iwidth}x{selectedP.iHeight}</span>&nbsp;&nbsp;\n                                <span className=\"uploadtxt\"><b>CURRENT SIZE-</b> {selectedP.cwidth}x{selectedP.cHeight}</span>\n                                <div className=\"panelcroparea\">\n                                    <Cropper\n                                        ref={this.cropperRef}\n                                        className=\"cropper\"\n                                        //src={selected}\n                                        dragMode='move'\n                                        viewMode={1}\n                                        aspectRatio={aspectRatio}\n                                        autoCropArea={autoCropArea}\n                                        strict={false}\n                                        responsive={true}\n                                        restore={true}\n                                        background={false}\n                                        autoCrop={false}\n                                        guides={false}\n                                        movable={true}\n                                        zoomable={false}\n                                        zoomOnTouch={false}\n                                        zoomOnWheel={false}\n                                        center={true}\n                                        highlight={true}\n                                        toggleDragModeOnDblclick={false}\n                                        minCropBoxWidth={minCropBoxWidth}\n                                        minCropBoxHeight={minCropBoxHeight}\n                                        minContainerWidth={minCropBoxWidth}\n                                        minContainerHeight={minCropBoxHeight}\n                                        crop={this.onCrop}\n                                        ready={this.cropImage}\n                                    />\n                                    <p className='crop-txt'>Please Crop Your Image To Save</p>\n                                    <div className=\"text-center btn-cropper-section d-flex\">\n                                        <a href=\"javascript:void(0)\" className={`${this.state.isActive == 'f' ? 'active' : ''} ${this.state.buttons.indexOf('f') == -1 ? 'disabledlink' : ''}`} onClick={this.freeCropping} >As Is</a>\n                                        <a href=\"javascript:void(0)\" className={`${this.state.isActive == 'l' ? 'active' : ''} ${this.state.buttons.indexOf('l') == -1 ? 'disabledlink' : ''}`} onClick={e => this.changeAspectRatio('l')}>Landscape</a>\n                                        <a href=\"javascript:void(0)\" className={`${this.state.isActive == 'p' ? 'active' : ''} ${this.state.buttons.indexOf('p') == -1 ? 'disabledlink' : ''}`} onClick={e => this.changeAspectRatio('p')}>Portrait</a>\n                                        <a href=\"javascript:void(0)\" className={`${this.state.isActive == 's' ? 'active' : ''} ${this.state.buttons.indexOf('s') == -1 ? 'disabledlink' : ''}`} onClick={e => this.changeAspectRatio('s')}>Square</a>\n                                        <a href=\"javascript:void(0)\" className={`${this.state.buttons.indexOf('r') == -1 ? 'disabledlink' : ''}`} onClick={this.RotateR}>Rotate</a>\n                                    </div>\n\n                                    <div className=\"mt20 upload-tag d-flex justify-content-between\">\n                                        <div>\n                                            {isTag &&\n                                                <div className=\"upload-textbox d-flex\">\n                                                    <input type=\"text\" className=\"form_control_\" placeholder=\"Type\" placeholder=\"Tag this photo, seperate tags by comma\"\n                                                        value={this.state.tags} name='tags' onChange={this.setTags} />\n                                                    <a href=\" javascript:void(0) \" className=\"btn tag-btn w100\">TAG</a>\n                                                </div>\n                                            }\n\n                                            {this.state.tagsError && 1 === 2 && <p className=\"error_msg\">This field is required.</p>}\n                                        </div>\n                                        <div>\n                                        {isPopup && <a href=\"javascript:void(0)\" className=\"btn savebtn w150 mr10\" onClick={this.backToOrigin}>CANCEL</a>}\n                                        <a href=\"javascript:void(0)\" className={`${this.state.isSaving && this.state.list.length == this.state.selectedIndex + 1 ? 'inactiveBtn saving-loader btndisabled' : ''} btn savebtn w150`} onClick={this.genrateCroppedUrl}>{this.state.list.length == this.state.selectedIndex + 1 ? 'SAVE' : 'SAVE AND NEXT'}</a>\n                                    </div>\n                                    </div>\n                                </div>\n                            </div>\n                        }</div>\n                    <Addonmodal toastmessage={this.props.toastmessage} />\n                </div></div >\n        );\n    }\n}\nfunction mapStateToProps({ auth: { token } }) {\n    return { token };\n}\nexport default connect(mapStateToProps, { updateModalData })(Uploader);"],"sourceRoot":""}