{"version":3,"sources":["components/modal/addonmodal.js"],"names":["Addonmodal","props","_this","Object","_Users_user_Desktop_workspace_quorumweb_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_user_Desktop_workspace_quorumweb_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_user_Desktop_workspace_quorumweb_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","closeModal","e","preventDefault","setState","modal","module","isOpen","updateModalData","showCustomModal","addon","scrollTo","offsetTop","arguments","length","undefined","elem","document","getElementById","scrollTop","scrollRef","state","isLoaded","body","prevProps","prevState","_this2","path","__webpack_require__","concat","then","default","catch","console","log","_this$state","Component","footer","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_7__","className","backdrop","href","onClick","reactstrap__WEBPACK_IMPORTED_MODULE_8__","id","_customFields_loader__WEBPACK_IMPORTED_MODULE_11__","assign","toastmessage","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","color","nextProps","connect","_ref","_ref$page$addonmodal","page","addonmodal"],"mappings":"wNAMMA,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KA4BRQ,WAAa,SAACC,GACTA,GAAGA,EAAEC,iBACRT,EAAKU,SAAS,CACZC,MAAO,KACPC,OAAQ,KAERC,QAAQ,IAEVb,EAAKD,MAAMe,gBAAgB,CAAEC,iBAAiB,EAAOC,OAAO,KArC3ChB,EAwCnBiB,SAAW,WAAmB,IAAlBC,EAAkBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,EAClBG,EAAOC,SAASC,eAAe,aACnCF,EAAKG,UAAYH,EAAKG,UAAYP,GAxClClB,EAAK0B,UAAY,KACjB1B,EAAK2B,MAAQ,CAAEhB,MAAO,KAAMC,OAAQ,KAAMgB,UAAU,EAAOf,QAAQ,EAAOgB,KAAM,IAH/D7B,kFAWA8B,EAAWC,GAAW,IAAAC,EAAA7B,KACvC,GAAI2B,EAAUnB,QAAUR,KAAKJ,MAAMY,MAAO,KAClCA,EAAUR,KAAKJ,MAAfY,MACNR,KAAKO,SAAS,CAAEG,OAAQF,EAAMI,kBAC1BJ,EAAMsB,KACRC,EAAA,IAAAA,CAAO,KAAAC,OAAMxB,EAAMsB,OAChBG,KAAK,SAAAxB,GAAM,OACVoB,EAAKtB,SAAS,CAAEE,OAAQA,EAAOyB,QAAST,UAAU,EAAMC,KAAM,OAE/DS,MAAM,SAAA9B,GACL+B,QAAQC,IAAIhC,KAETG,EAAMkB,MACb1B,KAAKO,SAAS,CAAEmB,KAAMlB,EAAMkB,KAAMjB,OAAQ,GAAIgB,UAAU,sCAqBrD,IAAAa,EAC8CtC,KAAKwB,MAA1Ce,EADTD,EACC7B,OAAmBD,EADpB8B,EACoB9B,MAAOiB,EAD3Ba,EAC2Bb,SAAUC,EADrCY,EACqCZ,KACpCc,EAAWxC,KAAKJ,MAAhB4C,OACR,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACElC,OAAQF,EAAMI,gBACdiC,UAAWrC,EAAMqC,UACjBC,SAAS,UAETL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGI,KAAK,IAAIF,UAAU,eAAeG,QAAShD,KAAKI,YAC/CqC,EAAAC,EAAAC,cAAA,QAAME,UAAU,UAAhB,OAGNJ,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAWC,GAAG,cACVzB,GAAYgB,EAAAC,EAAAC,cAACQ,EAAA,QAAD,MACb1B,GAAYc,GACXE,EAAAC,EAAAC,cAACJ,EAADzC,OAAAsD,OAAA,GACM5C,EADN,CAEEJ,WAAYJ,KAAKI,WACjBiD,aAAcrD,KAAKJ,MAAMyD,aACzBvC,SAAUd,KAAKc,YAGlBW,GAAYC,GACVA,GAGHc,GAAUC,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACVb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAQC,MAAM,YAAYR,QAAShD,KAAKI,YAAxC,+DArEwBqD,EAAW7B,GACzC,OAAI6B,EAAUjD,QAAUoB,EAAUpB,MACzB,CAAEA,MAAOiD,EAAUjD,OACd,YATO+B,aA2FVmB,sBAPf,SAAAC,GAEG,IAAAC,EAAAD,EADDE,KAAQC,WAER,MAAO,CACLtD,WAFD,IAAAoD,EADoB,CAAEhD,iBAAiB,GACvCgD,IAOD,CAAEjD,qBAFW+C,CAGb/D","file":"static/js/11.f14b0d08.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Loader from '../customFields/loader';\nimport { updateModalData } from '../../actions/page';\nclass Addonmodal extends Component {\n  constructor(props) {\n    super(props);\n    this.scrollRef = null;\n    this.state = { modal: null, module: null, isLoaded: false, isOpen: false, body: '' };\n  }\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.modal !== prevState.modal) {\n      return { modal: nextProps.modal };\n    } else return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.modal !== this.props.modal) {\n      let { modal } = this.props;\n      this.setState({ isOpen: modal.showCustomModal });\n      if (modal.path) {\n        import(`../${modal.path}`)\n          .then(module =>\n            this.setState({ module: module.default, isLoaded: true, body: '' })\n          )\n          .catch(e => {\n            console.log(e);\n          });\n      }else if(modal.body){\n        this.setState({ body: modal.body, module: '', isLoaded: true })\n      }\n    }\n  }\n\n  closeModal = (e) => {\n    if(e) e.preventDefault();\n    this.setState({\n      modal: null,\n      module: null,\n      //isLoaded: false,\n      isOpen: false\n    });\n    this.props.updateModalData({ showCustomModal: false, addon: true });\n  };\n\n  scrollTo = (offsetTop = 0) => {\n    let elem = document.getElementById('scrollRef');\n    elem.scrollTop = elem.scrollTop + offsetTop;\n  };\n\n  render() {\n    const { module: Component, modal, isLoaded, body } = this.state;\n    const { footer } = this.props;\n    return (\n      <Modal\n        isOpen={modal.showCustomModal}\n        className={modal.className}\n        backdrop=\"static\"\n      >\n        <div>\n          <a href=\"#\" className=\"btn-close pa\" onClick={this.closeModal}>\n              <span className=\"pclose\">+</span>\n          </a>\n        </div>\n        <ModalBody id=\"scrollRef\">\n          {!isLoaded && <Loader />}\n          {isLoaded && Component && (\n            <Component\n              {...modal}\n              closeModal={this.closeModal}\n              toastmessage={this.props.toastmessage}\n              scrollTo={this.scrollTo}\n            />\n          )}\n          {isLoaded && body && (\n             body \n          )}\n        </ModalBody>\n        { footer && <ModalFooter>\n          <Button color=\"secondary\" onClick={this.closeModal}>\n            Cancel\n          </Button>\n        </ModalFooter>\n        }\n      </Modal>\n    );\n  }\n}\nfunction mapStateToProps({\n  page: { addonmodal = { showCustomModal: false } }\n}) {\n  return {\n    modal: addonmodal\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { updateModalData }\n)(Addonmodal);\n"],"sourceRoot":""}